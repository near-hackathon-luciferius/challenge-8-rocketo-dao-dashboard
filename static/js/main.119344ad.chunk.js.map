{"version":3,"sources":["config.js","components/SignIn.jsx","components/Popup.jsx","layout.js","dao-layout.js","components/DaoCreationForm.jsx","components/CreateDao.jsx","components/DaoDashboard.jsx","components/JobForm.jsx","components/JobsOverview.jsx","components/JobDetailAdminCommands.jsx","components/JobDetailUserCommands.jsx","components/ApplicationForm.jsx","components/Tokens.jsx","components/TokenImage.jsx","components/ProgressBar.jsx","components/tooltip.jsx","components/formatting.js","components/lib.js","components/streamViewData.js","components/StreamIn.jsx","components/StreamOut.jsx","components/StreamingSpeed.jsx","components/Bullet.jsx","components/StreamProgressPercentage.jsx","components/StreamDashboard.jsx","components/JobDetail.jsx","components/MembersOverview.jsx","components/TasksOverview.jsx","components/ApplicationOverview.jsx","components/Voting.jsx","images/404.jpg","components/404.jsx","App.js","index.js"],"names":["CONTRACT_NAME","process","module","exports","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error","SignIn","signIn","id","large","onClick","className","Popup","props","handleClose","content","Layout","currentUser","signOut","clearMessage","message","floating","icon","fontSize","tooltip","accountId","setDao","dao","useParams","useEffect","pageWrapId","outerContainerId","to","DaoCreationForm","onDaoCreation","onSubmit","autoComplete","autoFocus","label","required","type","small","CreateDao","version","contract","navigate","useNavigate","useState","ownsDao","setOwnsDao","loaded","setLoaded","daos","setDaos","a","get_daos","result","console","log","includes","fetchData","target","href","length","map","DaoDashboard","daoData","members","setMembers","tasks","setTasks","jobs","setJobs","voting","setVoting","j","contracted","concat","applicants","reduce","x","y","applicant","filter","value","index","array","indexOf","name","src","alt","description","JobForm","onJobCreation","defaultValue","min","step","JobsOverview","openJobs","setOpenJobs","runningJobs","setRunningJobs","canceledJobs","setCanceledJobs","splitArrayIntoChunksOfLen","state","arr","len","chunks","i","n","push","slice","chunk","job","JobDetailAdminCommands","jobData","onCancelJob","onStartJob","stream","setContracted","status","payment_stream_id","onChange","e","JobDetailUserCommands","roketoContract","onEnablePayment","onReceivePayment","jobId","account","setAccount","get_account","account_id","is_cron_allowed","ApplicationForm","onApplyForJob","inputClassName","NearTokenImage","xmlns","width","height","viewBox","preserveAspectRatio","transform","fill","stroke","d","FallbackTokenIamge","Tokens","tokenName","rest","tokens","NEAR","fallback","Component","TokenImage","size","classNames","GRADIENT_STOP","GradientSVG","endColor","startColor","progressValue","idCSS","rotation","gradientTransform","style","offset","stopColor","ArcProgressBar","progresses","sort","b","circleRatio","styles","buildStyles","pathColor","strokeLinecap","minValue","maxValue","colors","progress","trailColor","Tooltip","children","html","overlay","placement","dangerouslySetInnerHTML","__html","decimals","address","is_mainnet","is_testnet","TARAS","XYI","TokenFormatter","token","TICK_TO_MS","Math","pow","TICK_TO_S","TICK_TO_MINUTE","TICK_TO_HOUR","TICK_TO_DAY","TICK_TO_WEEK","TICK_TO_MONTH","TICK_TO_YEAR","MP","bigValueFormatter","Intl","NumberFormat","minimumIntegerDigits","maximumFractionDigits","minimumFractionDigits","smallValueFormatter","minimumSignificantDigits","maximumSignificantDigits","formatSmartly","format","numbro","mantissa","trimMantissa","optionalMantissa","average","tokenPerSecondToInt","tps","multiply","divide","toInt","floatValue","amount","formatted","tokensPerMS","tokensPerTick","tokensPerS","token_name","tokensPerMeaningfulPeriod","multipliers","unit","firstGoodLookingMultiplier","find","multiplier","formattedValue","ticksToMs","ticks","round","ticksToS","secondsToTicks","seconds","speedPerSecondToTick","speedPerSec","window","tf","STREAM_STATUS","streamViewData","token_account_id","link","location","origin","stream_id","full","Number","balance","tokens_total_withdrawn","dateEnd","timestamp_created","tokens_per_sec","Date","available_to_withdraw","now","last_action","timestampEnd","getTime","withdrawn","streamed","available","left","percentages","isDead","StreamIn","strokeWidth","StreamOut","StreamingSpeed","direction","speedInfo","Bullet","StreamProgressPercentage","formattedFloatValue","percentageValue","colorClass","output","StreamDashboard","owner_id","receiver_id","streamDirection","align","top","overlayStyle","toLocaleString","JobDetail","wrapContract","onUnwrap","setJobData","jobPayment","setJobPayment","setStream","setState","hasWrapped","setHasWrapped","ft_balance_of","parseInt","data","duration","payment_cycle_in_s","minutes","floor","hours","days","Big","payment","div","toFixed","sleep","milliseconds","Promise","resolve","setTimeout","get_stream","MembersOverview","member","TasksOverview","url","position","overflow","ApplicationOverview","applications","setApplications","jobName","setJobName","copyApplicant","navigator","clipboard","writeText","application","Voting","NotFound","Image404","margin","React","require","BOATLOAD_OF_GAS","times","App","nearConfig","wallet","provider","lastTransaction","error","setMessage","setDaoData","txHash","txStatus","receipts_outcome","outcome","logs","pop","transaction","actions","FunctionCall","method_name","decodeURI","history","pushState","pathname","hash","getState","get_dao","dao_owner","near_withdraw","requestSignIn","contractId","methodNames","cancel_job","start_job","create_job_offering","apply_for_job","path","element","reload","preventDefault","elements","fieldset","name_prompt","description_prompt","icon_prompt","disabled","create_dao","dao_owner_id","payment_prompt","duration_prompt","then","_","streamId","stop_stream","job_id","application_prompt","focus","account_update_cron_flag","receive_job_payment","getConfig","NEAR_ENV","keyStore","nearAPI","BrowserLocalStorageKeyStore","near","walletConnection","getAccountId","viewMethods","changeMethods","sender","connection","nearInitPromise","initContract","errorMessage","urlParams","URLSearchParams","search","has","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.119344ad.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'dao-dashboard.cryptosketches.testnet';\n\nfunction getConfig(env) {\n  switch(env) {\n    case 'production':\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org'\n      };\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org'\n      };\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org'\n      };\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME,\n      };\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    default:\n      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n  }\n}\n\nmodule.exports = getConfig;\n","import React from 'react';\nimport { Button } from 'react-materialize';\n\nexport default function SignIn({signIn}) {\n  return (\n    <>\n      <main id=\"page-wrapper\">\n        <header>\n                      <h1>DAO Dashboard Homepage</h1>\n        </header>\n        <Button large onClick={signIn} className='login'>Log in</Button>\n        <p>\n            This app was developed for the NEAR Spring hackathon. \n            In order to use the app you need to sign in with your NEAR wallet.\n        </p>\n      </main>\n    </>\n  );\n}\n","import React from \"react\";\r\n\r\nconst Popup = props => {\r\n  return (\r\n    <div className=\"popup-box\">\r\n      <div className=\"box\">\r\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;","import React from 'react';\r\nimport { Outlet } from 'react-router-dom'\r\nimport { Button } from 'react-materialize';\r\nimport PropTypes from 'prop-types';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport BrokenImageIcon from '@mui/icons-material/BrokenImage';\r\nimport Popup from './components/Popup';\r\n\r\nconst Layout = ({currentUser, signIn, signOut, clearMessage, message}) => {\r\n  return (\r\n    <>\r\n      <div id=\"App\">\r\n          <Outlet/>\r\n          { currentUser\r\n            ? <Button onClick={signOut} floating large className='btn-login' icon={<AccountBalanceWalletIcon fontSize=\"large\" className=\"btn-icon\" />} tooltip={'Log out ' + currentUser.accountId + '.'} />\r\n            : <Button onClick={signIn} floating large className='btn-login' icon={<BrokenImageIcon fontSize=\"large\" className=\"btn-icon\" />} tooltip='Log in using NEAR wallet.' />\r\n          }        \r\n          {message && <Popup\r\n            content={<>\r\n              <b>A message for you</b>\r\n              <p>{message}</p>\r\n            </>}\r\n            handleClose={clearMessage}\r\n          />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  currentUser: PropTypes.shape({\r\n    accountId: PropTypes.string.isRequired,\r\n    balance: PropTypes.string.isRequired\r\n  }),\r\n  signIn: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Layout;","import React, {useEffect} from 'react';\r\nimport { Link, Outlet, useParams } from 'react-router-dom'\r\nimport { slide as Menu } from 'react-burger-menu';\r\n\r\nconst Layout = ({setDao}) => {\r\n  const { dao } = useParams();\r\n  useEffect(() => {\r\n    setDao(dao);\r\n  }, [dao, setDao]);\r\n\r\n  return (\r\n    <>\r\n      <Menu pageWrapId={ \"page-wrapper\" } outerContainerId={ \"App\" }>\r\n        <Link className=\"menu-item\" to=\"\">\r\n          Dao Dashboard\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"jobs\">\r\n          Jobs\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"tasks\">\r\n          Tasks\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"members\">\r\n          Members\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"governance\">\r\n          Governance\r\n        </Link>\r\n      </Menu>\r\n      \r\n      <main id=\"page-wrapper\">\r\n        <Outlet/>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\nimport { TextInput, Button, Textarea } from 'react-materialize';\n\nexport default function DaoCreationForm({ onDaoCreation }) {\n  return (\n    <form onSubmit={onDaoCreation}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Create a new DAO</h5>\n          <p>\n             Hint: If you are looking for an existing DAO scroll down to see the list of all existing DAOs. <br/>\n             Add all required parameter for the new job and hit the 'Create' button.\n          </p>\n            <TextInput\n                  autoComplete=\"off\"\n                  autoFocus\n                  id=\"name_prompt\"\n                  label=\"The name of your DAO.\"\n                  required\n            />\n            <Textarea\n                  id=\"description_prompt\"\n                  label=\"A detailed description of your DAO.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"icon_prompt\"\n                  label=\"An URL to you DAO icon. Optional.\"\n            />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Creates the DAO. This will costs 10 Ⓝ.\">\n          Create\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DaoCreationForm from './DaoCreationForm';\nimport ArrowForwardOutlinedIcon from '@mui/icons-material/ArrowForwardOutlined'; \nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-materialize';\n\nexport default function CreateDao({version, currentUser, contract, onDaoCreation}) {\n  const navigate = useNavigate();\n  const [ ownsDao, setOwnsDao ] = useState(false);\n  const [ loaded, setLoaded ] = useState(false);\n  const [ daos, setDaos ] = useState([]);\n  \n  useEffect(() => {\n      async function fetchData() {\n        const result = await contract.get_daos({ });\n        console.log(result);\n        setOwnsDao(result.includes(currentUser.accountId));\n        setDaos(result);\n        setLoaded(true);\n      }\n      \n      fetchData();\n  }, [contract, currentUser]);\n\n  const goToDao = (target) => {\n    navigate(target);\n  }\n\n  return (\n    <>\n      <main id=\"page-wrapper\">\n        <header>\n            <h1>NEAR Challenge #8 - DAO Dashboard - {version}</h1>\n        </header>\n        {loaded\n        ? <div className='flex flex-row-wrap justify-between margin-row-small'>\n            {ownsDao\n            ?<Button large \n                    onClick={() => goToDao(currentUser.accountId)}>\n                <div className='flex flex-row'>\n                  <div className='min-margin-right'><ArrowForwardOutlinedIcon className='btn-icon'/></div>\n                  <div>Got To Your DAO</div>\n                </div>\n            </Button>\n            :<DaoCreationForm onDaoCreation={onDaoCreation}/>}\n          </div>\n        : null}\n        <div className='text-bigger'>\n          <p className='mb-4 mt-4'>\n              This app solves the problem, that today DAOs have no centeral place for management.\n              They have a central point of communication - which is Discord, but they have a heap\n              of other tools for task management (trello), job postings (website), payment handling\n              (manual), voting (snapshot) and drafting documents (google docs).\n          </p>\n          <p className='mb-4 mt-4'>\n              This app combines all DAO related task into one unified DAO Management tool.\n          </p>\n          <ol className='mb-4 mt-4'>\n            <li>1. You can manage you DAO members and their roles which synchronizes with your Discord Server.</li>\n            <li>\n              2. You can manage, discuss, assign and provide payment for tasks. Tasks are payed in full\n              after completion.\n            </li>\n            <li>\n              3. You can post job offerings, where your members can apply for the jobs. The payment is powered \n              by <a href='https://www.roke.to/'>Roketo's</a> innovative money streaming. So your members get paid\n              while they work.\n            </li>\n            <li>\n              4. You can draft proposals for you whole community to vote on.\n            </li>\n          </ol>\n          <p className='mb-4 mt-4'>\n              All DAOs get their own custom website. If you are interested in seeing how that looks in real life,\n              click on one of the existing DAOs down below and check their DAO Dashboard.\n          </p>\n        </div>\n        <h5>All Existing DAOs</h5>\n        <div className='flex flex-col'>\n          {daos.length > 0\n          ? daos.map(dao => \n              <Link className='margin-row-small text-bigger bm-item menu-item flex flex-row' to={dao}>\n                <div className='min-margin-right'><ArrowForwardOutlinedIcon className='btn-icon'/></div>\n                <div>{dao}</div>\n              </Link>)\n          :null}\n        </div>\n      </main>\n    </>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\nimport TaskOutlinedIcon from '@mui/icons-material/TaskOutlined';\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\n\nexport default function DaoDashboard({daoData, loaded}) {\n  const { dao } = useParams();\n  const [members, setMembers] = useState('');\n  const [tasks, setTasks] = useState('');\n  const [jobs, setJobs] = useState('');\n  const [voting, setVoting] = useState('');\n\n  useEffect(() => {\n    if(!daoData.jobs){\n      return;\n    }\n    \n    setJobs(daoData.jobs.length);\n    setTasks(5);\n    setVoting(1);\n    setMembers(daoData.jobs.map((j) => j.contracted)\n                      .concat(daoData.jobs.map((j) => j.applicants).reduce(function (x, y) { return x.concat(y); }, [])\n                                    .map((a) => a.applicant))\n                      .filter((value, index, array) => array.indexOf(value) === index && value).length +1);\n  }, [daoData]);\n\n  if(!loaded){\n    return <>\n              <header>\n                  <h1>{dao} Dashboard</h1>\n              </header>\n              <p>\n                  Loading...\n              </p>\n            </>\n  }\n\n  return (\n    <>\n      <header>\n        <div className='flex flex-row flex-left items-center'>\n          <h1 className='mr-4'>{daoData.name} Dashboard</h1>\n          {daoData.icon ? <img src={daoData.icon} alt='DAO icon' className='dao-icon'/>: null}\n        </div>\n      </header>\n      <div className='flex flex-row justify-between'>\n        <Link className=\"bm-item menu-item flex-grow medium-margin-right\" to='members'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <PeopleAltOutlinedIcon className='icon-big'/>\n                  <p className='small'>Members</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{members}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n        <Link className=\"bm-item menu-item flex-grow medium-margin-right\" to='tasks'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <TaskOutlinedIcon className='icon-big'/>\n                  <p className='small'>Tasks</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{tasks}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n        <Link className=\"bm-item menu-item flex-grow medium-margin-right\" to='jobs'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <WorkOutlineOutlinedIcon className='icon-big'/>\n                  <p className='small'>Jobs</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{jobs}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n        <Link className=\"bm-item menu-item flex-grow\" to='governance'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <WorkOutlineOutlinedIcon className='icon-big'/>\n                  <p className='small'>Open Proposals</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{voting}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n      </div>\n      <p className='bigger-font preserve-newline'>\n          {daoData.description}\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport { TextInput, Button, Textarea } from 'react-materialize';\n\nexport default function JobForm({ onJobCreation }) {\n  return (\n    <form onSubmit={onJobCreation}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Create a new job offering</h5>\n          <p>Add all required parameter for the new job and hit the 'Create' button.</p>\n          <TextInput\n                  autoComplete=\"off\"\n                  autoFocus\n                  id=\"name_prompt\"\n                  label=\"The name of the job.\"\n                  required\n            />\n            <Textarea\n                  id=\"description_prompt\"\n                  label=\"A detailed description of the job.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"payment_prompt\"\n                  defaultValue={'1'}\n                  min=\"0\"\n                  step=\"1\"\n                  type=\"number\"\n                  label=\"The payment for the job in Ⓝ.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"duration_prompt\"\n                  defaultValue={'172800'}\n                  min=\"1\"\n                  step=\"1\"\n                  type=\"number\"\n                  label=\"The duration for the job offer in s.\"\n                  required\n            />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Creates the job and deposits the chosen payment.\">\n          Create\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport JobForm from './JobForm';\r\n\r\nconst JobsOverview = ({daoData, loaded, currentUser, onJobCreation}) => {\r\n  const { dao } = useParams();\r\n  const [ openJobs, setOpenJobs ] = useState([]);\r\n  const [ runningJobs, setRunningJobs ] = useState([]);\r\n  const [ canceledJobs, setCanceledJobs ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n    setOpenJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'Open'), 3));\r\n    setRunningJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'InProgress'), 3));\r\n    setCanceledJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'Canceled' || j.state === 'Completed'), 3));\r\n  }, [daoData]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  if(!loaded){\r\n    return <>\r\n              <header>\r\n                <h1>{dao}'s Jobs Board</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{daoData.name}'s Jobs Board</h1>\r\n                 </header>\r\n                  <h5>Open Jobs</h5>\r\n                  {openJobs.length > 0\r\n                  ? openJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p className='preserve-newline'>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p className='mb-8'>\r\n                        Currently there are no open jobs available.\r\n                    </p>}\r\n                  <h5>Active Jobs</h5>\r\n                  {runningJobs.length > 0\r\n                  ? runningJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p className='preserve-newline'>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p className='mb-8'>\r\n                        Currently there are no active jobs.\r\n                    </p>}\r\n                  <h5>Completed Jobs</h5>\r\n                  {canceledJobs.length > 0\r\n                  ? canceledJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p className='preserve-newline'>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p className='mb-8'>\r\n                        Currently there are no completed jobs.\r\n                    </p>}\r\n                  {(dao === currentUser.accountId) ? <JobForm onJobCreation={onJobCreation}/> : null}\r\n          </>\r\n}\r\n\r\nexport default JobsOverview;","import React, {useState} from 'react';\r\nimport { Button, TextInput } from 'react-materialize';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst JobDetailAdminCommands = ({jobData, onCancelJob, onStartJob, stream}) => {\r\n    const [contracted, setContracted] = useState();\r\n    const navigate = useNavigate();\r\n\r\n    const changeContracted = e => {\r\n        setContracted(e.target.value);\r\n    }\r\n\r\n    const goToApplications = () => {\r\n        navigate(\"applications\");\r\n    }\r\n\r\n  if(!jobData){\r\n    return null\r\n  }\r\n\r\n  switch(jobData.state){\r\n      case 'InProgress':\r\n          if(stream && stream.status !== 'Active'){\r\n              return null;\r\n          }\r\n          return <>\r\n                    <Button large \r\n                            tooltip='Canceles the payment an the job offering. Important: A new job has to be created afterwards.' \r\n                            onClick={() => onCancelJob(jobData.payment_stream_id)}>\r\n                        Cancel Contract\r\n                    </Button>\r\n                 </>\r\n      case 'Open':\r\n          return <>\r\n                    <div className=\"flex flex-col flex-grow medium-margin-right\">\r\n                        <TextInput\r\n                            autoComplete=\"off\"\r\n                            label=\"NEAR account id of the contracted.\"\r\n                            onChange={changeContracted}\r\n                        />\r\n                    </div>\r\n                    <Button large \r\n                            tooltip='Assigns the contracted and starts the job immediately.' \r\n                            onClick={() => onStartJob(jobData.id, contracted)}\r\n                            className={contracted ?'medium-margin-right':'medium-margin-right disabled'}>\r\n                                Assign Contracted And Start\r\n                    </Button>\r\n                    <Button large \r\n                            onClick={goToApplications}>\r\n                                View Applications\r\n                    </Button>\r\n                 </>\r\n      default: return null;\r\n  }\r\n}\r\n\r\nexport default JobDetailAdminCommands;","import React, {useState, useEffect} from 'react';\r\nimport { Button } from 'react-materialize';\r\n\r\nconst JobDetailUserCommands = ({currentUser, roketoContract, onEnablePayment, stream, onReceivePayment, jobId}) => {\r\n    const [ account, setAccount ] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n        const result = await roketoContract.get_account(\r\n        {\r\n            account_id: currentUser.accountId\r\n        });\r\n        console.log(result);\r\n        setAccount(result);\r\n        }\r\n\r\n        fetchData();\r\n    }, [currentUser, roketoContract]);\r\n\r\n  if(!account){\r\n    return null\r\n  }\r\n  \r\n  if(account.is_cron_allowed){\r\n    return stream && stream.status === 'Active'\r\n            ?<>\r\n                <Button large \r\n                        tooltip='Receives the available payment.' \r\n                        onClick={() => onReceivePayment(jobId)}>\r\n                    Receive Payment\r\n                </Button>\r\n            </>\r\n            :null\r\n  }\r\n  \r\n  return <>\r\n            <Button large \r\n                    tooltip='Enables the payment for the job and all other jobs in the future.' \r\n                    onClick={onEnablePayment}>\r\n                Enable Payment\r\n            </Button>\r\n        </>\r\n}\r\n\r\nexport default JobDetailUserCommands;","import React from 'react';\nimport { TextInput, Button, Textarea } from 'react-materialize';\n\nexport default function ApplicationForm({ onApplyForJob, jobId }) {\n  return (\n    <form onSubmit={onApplyForJob}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Apply for the job</h5>\n          <p>Write your most inspiring application down below.</p>\n          <TextInput\n                autoComplete=\"off\"\n                id=\"job_id\"\n                label=\"The job ID. Do not change it!\"\n                required\n                inputClassName='disabled'\n                value={jobId}\n          />\n          <Textarea\n                autoFocus\n                id=\"application_prompt\"\n                label=\"Here is the space for your amazing application.\"\n                required\n          />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Applies for the job. In order to change your application simply fill the form again.\">\n          Apply\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React from 'react';\nconst NearTokenImage = (props) => (\n  <svg\n    version=\"1.0\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20pt\"\n    height=\"20pt\"\n    viewBox=\"0 0 864.000000 864.000000\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    {...props}\n  >\n    <g\n      transform=\"translate(0.000000,864.000000) scale(0.100000,-0.100000)\"\n      fill=\"#000000\"\n      stroke=\"none\"\n    >\n      <path d=\"M2490 6461 c-164 -53 -265 -156 -314 -320 -14 -49 -16 -226 -16 -1821 0 -1595 2 -1772 16 -1821 25 -85 62 -148 118 -205 179 -178 476 -178 650 0 30 30 249 347 519 749 518 772 502 742 438 799 -21 19 -42 28 -66 28 -40 0 -6 28 -555 -449 -283 -246 -411 -351 -425 -349 -20 3 -20 11 -20 1238 l0 1235 21 3 c16 2 286 -315 1376 -1621 746 -892 1372 -1637 1392 -1654 94 -83 187 -113 351 -113 169 0 275 39 371 134 56 57 93 120 118 205 14 49 16 226 16 1821 0 1595 -2 1772 -16 1821 -25 85 -62 148 -118 205 -179 178 -476 178 -650 0 -30 -30 -249 -347 -519 -749 -518 -772 -502 -742 -438 -799 21 -19 42 -28 66 -28 40 0 6 -28 555 449 283 246 411 351 425 349 20 -3 20 -11 20 -1238 l0 -1235 -21 -3 c-16 -2 -286 315 -1376 1621 -746 892 -1372 1637 -1392 1654 -95 85 -187 113 -356 112 -82 0 -131 -5 -170 -18z\" />\n    </g>\n  </svg>\n);\n\nconst FallbackTokenIamge = (props) => (\n  <svg\n    version=\"1.0\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20pt\"\n    height=\"20pt\"\n    viewBox=\"0 0 864.000000 864.000000\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    {...props}\n  >\n    <g\n      transform=\"translate(0.000000,864.000000) scale(0.100000,-0.100000)\"\n      fill=\"#000000\"\n      stroke=\"none\"\n    >\n      <path d=\"M2490 6461 c-164 -53 -265 -156 -314 -320 -14 -49 -16 -226 -16 -1821 0 -1595 2 -1772 16 -1821 25 -85 62 -148 118 -205 179 -178 476 -178 650 0 30 30 249 347 519 749 518 772 502 742 438 799 -21 19 -42 28 -66 28 -40 0 -6 28 -555 -449 -283 -246 -411 -351 -425 -349 -20 3 -20 11 -20 1238 l0 1235 21 3 c16 2 286 -315 1376 -1621 746 -892 1372 -1637 1392 -1654 94 -83 187 -113 351 -113 169 0 275 39 371 134 56 57 93 120 118 205 14 49 16 226 16 1821 0 1595 -2 1772 -16 1821 -25 85 -62 148 -118 205 -179 178 -476 178 -650 0 -30 -30 -249 -347 -519 -749 -518 -772 -502 -742 -438 -799 21 -19 42 -28 66 -28 40 0 6 -28 555 449 283 246 411 351 425 349 20 -3 20 -11 20 -1238 l0 -1235 -21 -3 c-16 -2 -286 315 -1376 1621 -746 892 -1372 1637 -1392 1654 -95 85 -187 113 -356 112 -82 0 -131 -5 -170 -18z\" />\n    </g>\n  </svg>\n);\n\nexport function Tokens({tokenName, className, ...rest}) {\n  const tokens = {\n    NEAR: NearTokenImage,\n    fallback: FallbackTokenIamge,\n  };\n  const Component = tokens[tokenName] || tokens['fallback'];\n  return <Component className={className} {...rest}></Component>;\n}\n","import React from 'react';\nimport {Tokens} from './Tokens';\nimport classNames from 'classnames';\nexport function TokenImage({tokenName, size = 8, className, ...rest}) {\n  return (\n    <div\n      className={classNames(\n        'p-1 flex-shrink-0 rounded-lg bg-card2 inline-flex items-center justify-center',\n        `w-${size} h-${size}`,\n        className,\n      )}\n      {...rest}\n    >\n      <Tokens className=\"w-full h-full\" tokenName={tokenName} />\n    </div>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  CircularProgressbar,\n  CircularProgressbarWithChildren,\n  buildStyles,\n} from 'react-circular-progressbar';\n\nconst GRADIENT_STOP = [\n  ['#4743FB', '#C750FF'],\n  ['#FFCC69', '#FF8469'],\n];\nconst GRADIENTS = [\n  `linear-gradient(270deg, ${GRADIENT_STOP[0][0]} 0%, ${GRADIENT_STOP[0][1]} 100%)`,\n  `linear-gradient(270deg, ${GRADIENT_STOP[1][0]} 0%, ${GRADIENT_STOP[1][1]} 100%)`,\n];\n\nexport function ProgressBar({progresses, className, ...rest}) {\n  let p = [...progresses];\n  p.sort((a, b) => b - a);\n\n  return (\n    <div\n      className={classNames(\n        'relative h-3 rounded-r-md rounded-l-lg bg-progressBar',\n        className,\n      )}\n      {...rest}\n    >\n      {p.map((progress, i) => (\n        <div\n          key={i}\n          className=\"absolute left-0 h-full rounded-lg\"\n          style={{\n            width: progress * 100 + '%',\n            background: GRADIENTS[i],\n          }}\n        ></div>\n      ))}\n    </div>\n  );\n}\n\nfunction GradientSVG({endColor, startColor, progressValue, idCSS, rotation}) {\n  let gradientTransform = `rotate(${rotation})`;\n\n  return (\n    <svg style={{height: 0}}>\n      <defs>\n        <linearGradient id={idCSS} gradientTransform={gradientTransform}>\n          <stop offset=\"0%\" stopColor={startColor} />\n          {progressValue > 0 && progressValue < 100 ? (\n            <stop offset={`${progressValue}%\"`} stopColor={endColor} />\n          ) : null}\n          <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n}\n\nexport function ArcProgressBar({progresses, className, ...rest}) {\n  progresses.sort((a, b) => b - a);\n  const rotation = 3 / 4;\n\n  return (\n    <div className={classNames(className)} {...rest}>\n      <CircularProgressbarWithChildren\n        circleRatio={0.5}\n        styles={buildStyles({\n          rotation,\n          pathColor: '#0D0B26',\n          strokeLinecap: 'round',\n        })}\n        value={1}\n        minValue={0}\n        maxValue={1}\n      >\n        {GRADIENT_STOP.map((colors, i) => (\n          <GradientSVG\n            idCSS={`__arcProgressBar_grad_${i}`}\n            rotation={i === 0 ? 90 : 90}\n            startColor={colors[0]}\n            endColor={colors[1]}\n          />\n        ))}\n        {progresses.map((progress, i) => (\n          <CircularProgressbar\n            circleRatio={0.5}\n            className=\"absolute inset-0\"\n            value={progress}\n            styles={buildStyles({\n              rotation,\n              trailColor: 'transparent',\n              pathColor: `url(#__arcProgressBar_grad_${i})`,\n              strokeLinecap: 'round',\n            })}\n            minValue={0}\n            maxValue={1}\n          />\n        ))}\n      </CircularProgressbarWithChildren>\n    </div>\n  );\n}\n","import './tooltip.scss';\n\nimport RCTooltip from 'rc-tooltip';\nimport React from 'react';\n\nexport function Tooltip({children, html, overlay, ...rest}) {\n  return (\n    <RCTooltip\n      // @ts-ignore\n      placement=\"top\"\n      overlay={\n        html ? <div dangerouslySetInnerHTML={{__html: html}}></div> : overlay\n      }\n      {...rest}\n    >\n      {children || <span className=\"Tooltip__defaultIcon\">?</span>}\n    </RCTooltip>\n  );\n}\n","import numbro from 'numbro';\n\nexport const tokens = {\n  'wrap.testnet': {\n    name: 'Near',\n    decimals: 24,\n    address: 'wrap.testnet',\n    is_mainnet: true,\n    is_testnet: true,\n  },\n  TARAS: {\n    name: 'Taras',\n    decimals: 18,\n    address: 'dev-1630798753809-34755859843881',\n    is_mainnet: false,\n    is_testnet: true,\n  },\n  XYI: {\n    name: 'XYI',\n    decimals: 18,\n    address: 'xyi.tkn.near',\n    is_mainnet: true,\n    is_testnet: false,\n  },\n  fallback: {\n    name: null,\n    decimals: 18,\n    address: null,\n    is_mainnet: false,\n    is_testnet: false,\n  },\n};\n\nexport function TokenFormatter(tokenName) {\n  let token = tokens[tokenName] || tokens.fallback;\n  const TICK_TO_MS = Math.pow(10, 6);\n  const TICK_TO_S = Math.pow(10, 9);\n  const TICK_TO_MINUTE = TICK_TO_S * 60;\n  const TICK_TO_HOUR = TICK_TO_MINUTE * 60;\n  const TICK_TO_DAY = TICK_TO_HOUR * 24;\n  const TICK_TO_WEEK = TICK_TO_DAY * 7;\n  const TICK_TO_MONTH = TICK_TO_WEEK * 4;\n  const TICK_TO_YEAR = TICK_TO_MONTH * 12;\n\n  const MP = Math.pow(10, token.decimals);\n\n  const bigValueFormatter = Intl.NumberFormat('en-US', {\n    minimumIntegerDigits: 1,\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2,\n  });\n  const smallValueFormatter = Intl.NumberFormat('en-US', {\n    minimumSignificantDigits: 2,\n    maximumSignificantDigits: 4,\n    maximumFractionDigits: token.decimals,\n  });\n\n  const formatSmartly = (value) => {\n    if (value < 1) {\n      return smallValueFormatter.format(value);\n    } else if (value < 1000000) {\n      return bigValueFormatter.format(value);\n    } else {\n      return numbro(value).format({\n        mantissa: 3,\n        trimMantissa: true,\n        optionalMantissa: true,\n        average: true,\n      });\n    }\n  };\n\n  return {\n    tokenPerSecondToInt: (tps) =>\n      numbro(tps).multiply(MP).divide(TICK_TO_S).format({mantissa: 0}),\n    toInt: (floatValue) =>\n      numbro(floatValue).multiply(MP).format({mantissa: 0}),\n    amount: (amount, decimals = token.decimals) => {\n      const value = numbro(amount).divide(MP).value();\n      const formatted = formatSmartly(value);\n      return formatted;\n    },\n    tokensPerMS: (tokensPerTick) => {\n      const value = numbro(tokensPerTick).multiply(TICK_TO_MS).divide(MP);\n      return formatSmartly(value);\n    },\n    tokensPerS: (tokensPerTick) => {\n      const value = numbro(tokensPerTick)\n        .multiply(TICK_TO_S)\n        .divide(MP)\n        .value();\n\n      return formatSmartly(value);\n    },\n    token_name: token.name,\n    tokensPerMeaningfulPeriod: (tokensPerTick) => {\n      // tries to find the best interval for display\n      // to avoid 0.0000000000000000000000000009839248 tokens per sec\n      const multipliers = [\n        TICK_TO_S,\n        TICK_TO_MINUTE,\n        TICK_TO_HOUR,\n        TICK_TO_DAY,\n        TICK_TO_WEEK,\n        TICK_TO_MONTH,\n        TICK_TO_YEAR,\n      ];\n      const unit = {\n        [TICK_TO_S]: 'second',\n        [TICK_TO_MINUTE]: 'minute',\n        [TICK_TO_HOUR]: 'hour',\n        [TICK_TO_DAY]: 'day',\n        [TICK_TO_WEEK]: 'week',\n        [TICK_TO_MONTH]: 'month',\n        [TICK_TO_YEAR]: 'year',\n      };\n      const firstGoodLookingMultiplier =\n        multipliers.find((multiplier) => {\n          const value = numbro(tokensPerTick)\n            .multiply(multiplier)\n            .divide(MP)\n            .value();\n          const isOk = value > 0.01;\n          return isOk;\n        }) || TICK_TO_YEAR;\n\n      const value = numbro(tokensPerTick)\n        .multiply(firstGoodLookingMultiplier)\n        .divide(MP)\n        .value();\n\n      return {\n        formattedValue: formatSmartly(value),\n        unit: unit[firstGoodLookingMultiplier],\n      };\n    },\n    ticksToMs: (ticks) => Math.round(ticks / TICK_TO_MS),\n    ticksToS: (ticks) => Math.round(ticks / TICK_TO_S),\n    secondsToTicks: (seconds) => seconds * TICK_TO_S,\n    speedPerSecondToTick: (speedPerSec) =>\n      numbro(speedPerSec).multiply(TICK_TO_S).value(),\n  };\n}\n\nwindow.tf = TokenFormatter;\nexport function timestamp(value) {\n  return {\n    fromNanosec() {\n      return value / 1000 / 1000;\n    },\n  };\n}\n","export const STREAM_STATUS = {\n  INITIALIZED: 'INITIALIZED',\n  ACTIVE: 'ACTIVE',\n  PAUSED: 'PAUSED',\n  FINISHED: 'FINISHED',\n  INTERRUPTED: 'INTERRUPTED',\n};\nexport const STREAM_DIRECTION = {\n  IN: 'in',\n  OUT: 'out',\n};\nexport const STREAM_AUTODEPOSIT_STATUS = {\n  ENABLED: 'enabled',\n  DISABLED: 'disabled',\n};\n\nexport const STREAM_ACTION_TYPE = {\n  INIT: 'Init',\n  DEPOSIT: 'Deposit',\n  START: 'Start',\n  WITHDRAW: 'Withdraw',\n  PAUSE: 'Pause',\n  STOP: 'Stop',\n};\n\nexport function streamDirection({stream, account}) {\n  if (!account) return '';\n\n  if (stream.owner_id === account.accountId) {\n    return 'out';\n  } else if (stream.receiver_id === account.accountId) {\n    return 'in';\n  } else {\n    return '';\n  }\n}\n","import {TokenFormatter} from './formatting';\nimport {STREAM_STATUS} from './lib';\n\nexport function streamViewData(stream) {\n  const tf = TokenFormatter(stream.token_account_id);\n\n  // public link\n  const link = `${window.location.origin}/#/my_streams/${stream.stream_id}`;\n\n  const full = Number(stream.balance) + Number(stream.tokens_total_withdrawn);\n  let dateEnd = stream.timestamp_created + tf.secondsToTicks(full/stream.tokens_per_sec);\n  dateEnd = new Date(dateEnd/1000000);\n  const available_to_withdraw = Math.min(Number(stream.tokens_per_sec)*tf.ticksToS(Date.now()*1000000-stream.last_action), Number(stream.balance));\n\n  const timestampEnd = dateEnd.getTime();\n\n  // progress bar calculations\n  const withdrawn = Number(stream.tokens_total_withdrawn);\n  const streamed =\n    (Number(stream.tokens_total_withdrawn) +\n    available_to_withdraw);\n  const available = available_to_withdraw;\n\n  const left = full - streamed;\n  const progresses = [withdrawn / full, streamed / full];\n\n  const percentages = {\n    left: (full - streamed) / full,\n    streamed: streamed / full,\n    withdrawn: withdrawn / full,\n    available: available / full,\n  };\n\n  const isDead =\n    stream.status === STREAM_STATUS.FINISHED ||\n    stream.status === STREAM_STATUS.INTERRUPTED;\n\n  return {\n    dateEnd,\n    progresses,\n    tf,\n    isDead,\n    percentages,\n    link,\n    timestampEnd,\n    progress: {\n      full,\n      withdrawn,\n      streamed,\n      left,\n      available,\n    },\n  };\n}\n","import React from 'react';\nexport const StreamIn = () => (\n  <svg\n    width=\"16\"\n    height=\"17\"\n    viewBox=\"0 0 16 17\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0.999991 1.84371L8.23523 9.07889M8.23523 9.07889V1.84371M8.23523 9.07889H1.00004\"\n      stroke=\"#2EDDD9\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n    />\n    <path\n      d=\"M12.1637 6.27124C13.5911 7.14289 14.5438 8.71524 14.5438 10.5101C14.5438 13.2512 12.3218 15.4733 9.58068 15.4733C7.7858 15.4733 6.21344 14.5205 5.3418 13.0931\"\n      stroke=\"#2EDDD9\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n    />\n  </svg>\n);\n","import React from 'react';\nexport const StreamOut = () => (\n  <svg\n    width=\"16\"\n    height=\"17\"\n    viewBox=\"0 0 16 17\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8.23528 9.07894L1 1.8437M1 1.8437V9.07894M1 1.8437H8.23523\"\n      stroke=\"#F56173\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n    />\n    <path\n      d=\"M12.1637 6.27117C13.591 7.14282 14.5438 8.71519 14.5438 10.5101C14.5438 13.2512 12.3217 15.4733 9.58065 15.4733C7.78575 15.4733 6.21339 14.5205 5.34174 13.0931\"\n      stroke=\"#F56173\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n    />\n  </svg>\n);\n","import React from 'react';\nimport {streamViewData} from './streamViewData';\nimport {StreamIn} from './StreamIn';\nimport {StreamOut} from './StreamOut';\nimport classNames from 'classnames';\n\nexport function StreamingSpeed({stream, direction, className, ...rest}) {\n  const {tf} = streamViewData(stream);\n\n  const speedInfo = tf.tokensPerMeaningfulPeriod(stream.tokens_per_sec/Math.pow(10, 9));\n\n  return (\n    <div\n      className={classNames(\n        'inline-flex items-center whitespace-nowrap',\n        className,\n      )}\n      {...rest}\n    >\n      {direction === 'out' ? (\n        <StreamOut />\n      ) : direction === 'in' ? (\n        <StreamIn />\n      ) : (\n        ''\n      )}\n      <span className=\"ml-2\">\n        <span>@{speedInfo.formattedValue}</span>\n        <span>\n          {' '}\n          {tf.token_name} / {speedInfo.unit}\n        </span>\n      </span>\n    </div>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport function Bullet({className, ...rest}) {\n  return (\n    <div\n      className={classNames(\n        'inline-block w-2 h-2 flex-shrink-9 rounded-full',\n        className,\n      )}\n      {...rest}\n    ></div>\n  );\n}\n","import React from 'react';\nimport {Bullet} from './Bullet';\nimport numbro from 'numbro';\nimport classNames from 'classnames';\n\nexport function StreamProgressPercentage({\n  label,\n  formattedFloatValue,\n  percentageValue,\n  colorClass,\n  className,\n  ...rest\n}) {\n  return (\n    <div className={className} {...rest}>\n      <Bullet className={classNames(colorClass, 'mr-1')} />\n      <span>\n        {label}:{' '}\n        <span className=\"font-semibold\">{formattedFloatValue} </span>\n        <span className=\"text-gray\">\n          {' '}\n          (\n          {numbro(percentageValue).format({\n            output: 'percent',\n            mantissa: 1,\n          })}\n          )\n        </span>\n      </span>\n    </div>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport {TokenImage} from './TokenImage';\nimport {ArcProgressBar} from './ProgressBar';\nimport {Tooltip} from './tooltip';\nimport { streamViewData } from './streamViewData';\nimport {StreamingSpeed} from './StreamingSpeed';\nimport {streamDirection} from './lib';\nimport {StreamProgressPercentage} from './StreamProgressPercentage';\n\nexport function StreamDashboard({stream, account}) {\n  const {\n    tf,\n    progresses,\n    percentages,\n    dateEnd,\n    progress: {full, withdrawn, streamed, available, left},\n  } = streamViewData(stream);\n  const direction = streamDirection({stream, account});\n\n  return (\n    <div\n      className={classNames(\n        'flex',\n        'flex-col',\n        'items-center',\n      )}\n    >\n      <h5 className='mb-8'>Payment Details</h5>\n      <div className=\"-mb-32\">\n        <Tooltip\n          align={{offset: [0, -20]}}\n          offset={{top: 20}}\n          overlayStyle={{ 'background-color': '#1f1d37' }}\n          overlay={\n            <div className=\"text-left\">\n              <StreamProgressPercentage\n                className=\"whitespace-nowrap mb-2\"\n                label=\"Withdrawn\"\n                colorClass=\"bg-streams-withdrawn\"\n                formattedFloatValue={\n                  tf.amount(withdrawn) + ' ' + tf.token_name\n                }\n                percentageValue={percentages.withdrawn}\n              />\n              <StreamProgressPercentage\n                className=\"whitespace-nowrap\"\n                label=\"Streamed\"\n                colorClass=\"bg-streams-streamed\"\n                formattedFloatValue={\n                  tf.amount(streamed) + ' ' + tf.token_name\n                }\n                percentageValue={percentages.streamed}\n              />\n            </div>\n          }\n        >\n          <ArcProgressBar\n            className=\"w-96 h-48\"\n            progresses={progresses}\n          />\n        </Tooltip>\n\n        <div className=\"flex justify-between pt-5 -mx-2 text-gray\">\n          <div className=\"w-10 text-center\"> 0%</div>\n          <div className=\"w-10 text-center\"> 100%</div>\n        </div>\n      </div>\n\n      <TokenImage\n        size={14}\n        tokenName={tf.token_name}\n        className=\"mb-8\"\n      />\n      <div className=\"text-6xl font-semibold\">\n        {tf.amount(streamed)}\n      </div>\n      <div className=\"text-gray font-semibold\">\n        of {tf.amount(full)} {tf.token_name}\n      </div>\n      <StreamingSpeed\n        stream={stream}\n        direction={direction}\n        className=\"mt-6 mb-6\"\n      />\n      <div className='flex flex-grow justify-between margin-row-small'>\n        <div className='text-unimportant min-margin-right'>Available to receive:</div>\n        <div>{tf.amount(available)} {tf.token_name}</div>\n      </div>\n      <div className='flex flex-grow justify-between margin-row-small'>\n        <div className='text-unimportant min-margin-right'>Locked amount:</div>\n        <div>{tf.amount(left)} {tf.token_name}</div>\n      </div>\n      <div className='flex flex-grow justify-between margin-row-small'>\n        <div className='text-unimportant min-margin-right'>Fully unlocked:</div>\n        <div>{dateEnd.toLocaleString()}</div>\n      </div>\n    </div>\n  );\n}\n","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Big from 'big.js';\r\nimport JobDetailAdminCommands from './JobDetailAdminCommands';\r\nimport JobDetailUserCommands from './JobDetailUserCommands';\r\nimport ApplicationForm from './ApplicationForm';\r\nimport { StreamDashboard } from './StreamDashboard';\r\nimport { Button } from 'react-materialize';\r\n\r\nconst JobDetail = ({daoData, currentUser, onCancelJob, onStartJob, onApplyForJob, roketoContract, onEnablePayment, onReceivePayment, wrapContract, onUnwrap}) => {\r\n  const { dao, job } = useParams();\r\n  const [ jobData, setJobData ] = useState();\r\n  const [ jobPayment, setJobPayment ] = useState();\r\n  const [ stream, setStream ] = useState();\r\n  const [ state, setState ] = useState();\r\n  const [ hasWrapped, setHasWrapped ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await wrapContract.ft_balance_of(\r\n      {\r\n        account_id: currentUser.accountId\r\n      });\r\n      console.log(result);\r\n      if(result){\r\n        setHasWrapped(parseInt(result) > 0);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [currentUser, wrapContract]);\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.find((j) => j.id === job);\r\n    let duration = parseInt(data.payment_cycle_in_s);\r\n    let seconds = duration%60;\r\n    let minutes = Math.floor((duration%(60*60))/60);\r\n    let hours = Math.floor((duration%(60*60*24))/(60*60));\r\n    let days = Math.floor(duration/(60*60*24));\r\n    duration = '';\r\n    if(days){\r\n      duration += ' ' + days + 'd';\r\n    }\r\n    if(hours){\r\n      duration += ' ' + hours + 'h';\r\n    }\r\n    if(minutes){\r\n      duration += ' ' + minutes + 'm';\r\n    }\r\n    if(seconds){\r\n      duration += ' ' + seconds + 's';\r\n    }\r\n    data.duration = duration;\r\n    setJobData(data);\r\n    setJobPayment(Big(data.payment).div(10 ** 24).toFixed(2))\r\n  }, [daoData, job]);\r\n\r\n  const sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if(!jobData || !jobData.payment_stream_id){\r\n        return;\r\n      }\r\n      const result = await roketoContract.get_stream(\r\n      {\r\n        stream_id: jobData.payment_stream_id\r\n      });\r\n      console.log(result);\r\n      await sleep(1000);\r\n      setStream(result);\r\n    }\r\n\r\n    fetchData();\r\n  }, [jobData, stream, roketoContract]);\r\n\r\n  useEffect(() => {\r\n    if(jobData){\r\n      switch(jobData.state){\r\n        case 'InProgress':\r\n          if(stream && stream.status === 'Active'){\r\n            setState('Running')\r\n          }\r\n          else{\r\n            setState('Completed/Cancelled')\r\n          }\r\n          break;\r\n        default:\r\n          setState(jobData.state)\r\n          break;\r\n      }\r\n    }\r\n  }, [jobData, stream]);\r\n\r\n  if(!jobData){\r\n    return <>\r\n              <header>\r\n                <h1>{job}'s Details</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{jobData.name}'s Details</h1>\r\n                 </header>\r\n                 <div className='flex flex-row-wrap margin-row-small'>\r\n                   {hasWrapped\r\n                   ? <Button large \r\n                             tooltip='You have wrapped NEAR. This function will unwrap all wrapped near.' \r\n                             onClick={onUnwrap}\r\n                             className='medium-margin-right'>\r\n                         Unwrap NEAR\r\n                     </Button>\r\n                   : null}\r\n                   {currentUser.accountId === dao \r\n                   ? <JobDetailAdminCommands jobData={jobData} onCancelJob={onCancelJob} onStartJob={onStartJob} stream={stream}/> \r\n                   : jobData && jobData.contracted === currentUser.accountId\r\n                      ? <JobDetailUserCommands currentUser={currentUser} roketoContract={roketoContract} onEnablePayment={onEnablePayment}\r\n                                               stream={stream} onReceivePayment={onReceivePayment} jobId={jobData.id}/>\r\n                      : null}\r\n                 </div>\r\n                 <div className='flex flex-row-wrap justify-between'>\r\n                    <div className=\"details-view flex flex-col flex-grow medium-margin-right\">\r\n                      <div className='margin-row-small text-bigger preserve-newline'>\r\n                        {jobData.description}\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Status:</div>\r\n                        <div>{state}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Total Payment:</div>\r\n                        <div>{jobPayment} Ⓝ</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Contract Duration:</div>\r\n                        <div>{jobData.duration}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Applications:</div>\r\n                        <div>{jobData.applicants.length}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Contracted:</div>\r\n                        <div>{jobData.contracted}</div>\r\n                      </div>\r\n                    </div>\r\n                    {stream\r\n                      ? <div className='details-view'>\r\n                          <StreamDashboard stream={stream} account={currentUser}/>\r\n                        </div>\r\n                      : null}\r\n                 </div>\r\n                 {(dao !== currentUser.accountId && jobData.state === 'Open') ? <div className=\"margin-row-big\"><ApplicationForm onApplyForJob={onApplyForJob} jobId={jobData.id}/></div> : null}\r\n          </>\r\n}\r\n\r\nexport default JobDetail;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MembersOverview = ({daoData}) => {\r\n  const { dao } = useParams();\r\n  const [ members, setMembers ] = useState();\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.map((j) => j.contracted)\r\n                      .concat(daoData.jobs.map((j) => j.applicants).reduce(function (x, y) { return x.concat(y); }, [])\r\n                                     .map((a) => a.applicant))\r\n                      .filter((value, index, array) => array.indexOf(value) === index && value);\r\n    setMembers(splitArrayIntoChunksOfLen(data,3));\r\n  }, [daoData]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  if(!members){\r\n    return <>\r\n              <header>\r\n                <h1>{dao}'s Members</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{daoData.name}'s Members</h1>\r\n                 </header>\r\n                 <div className=\"row\">\r\n                   <div className='col s4'>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-title flex flex-row\">\r\n                          <div className='min-margin-right'>{dao}</div>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                          <div className='flex justify-between margin-row-small'>\r\n                            <div className='text-unimportant min-margin-right'>Role:</div>\r\n                            <div>Admin</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                 {members.length > 0\r\n                 ? members.map(chunk =>\r\n                  <div className=\"row\">\r\n                    {chunk.map(member => \r\n                      <div className=\"col s4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-title flex flex-row\">\r\n                              <div className='min-margin-right'>{member}</div>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                              <div className='flex justify-between margin-row-small'>\r\n                                <div className='text-unimportant min-margin-right'>Role:</div>\r\n                                <div>User</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                      </div>)}\r\n                  </div>)\r\n                 : <p>\r\n                      Currently there are no members in this DAO active.\r\n                  </p>}\r\n          </>\r\n}\r\n\r\nexport default MembersOverview;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Iframe from 'react-iframe';\r\n\r\nconst TasksOverview = ({daoData, loaded}) => {\r\n  const { dao } = useParams();\r\n\r\n  if(!loaded){\r\n    return <>\r\n              <header>\r\n                  <h1>{dao} Dashboard</h1>\r\n              </header>\r\n              <p>\r\n                  Loading...\r\n              </p>\r\n            </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{daoData.name}'s Tasks Board</h1>\r\n                 </header>\r\n                 <div>\r\n                    <Iframe url={\"https://trello.com/b/Ywm3W9HB.html\"}\r\n                            position=\"relative\"\r\n                            overflow=\"hidden\"\r\n                            className='mockup-iframe'/>\r\n                  </div>\r\n          </>\r\n}\r\n\r\nexport default TasksOverview;","import React, {useEffect, useState} from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport ArrowBackOutlinedIcon from '@mui/icons-material/ArrowBackOutlined';\r\nimport { Button } from 'react-materialize';\r\n\r\nconst ApplicationOverview = ({daoData}) => {\r\n  const { job } = useParams();\r\n  const [ applications, setApplications ] = useState();\r\n  const [ jobName, setJobName ] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.find((j) => j.id === job);\r\n    setApplications(splitArrayIntoChunksOfLen(data.applicants,2));\r\n    setJobName(data.name);\r\n  }, [daoData, job]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  const goBack = () => {\r\n      navigate(-1);\r\n  }\r\n\r\n  const copyApplicant = async (applicant) => {\r\n    await navigator.clipboard.writeText(applicant);\r\n  }\r\n\r\n  if(!applications){\r\n    return <>\r\n              <header>\r\n                <h1>{job}'s Applications</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{jobName}'s Applications</h1>\r\n                 </header>\r\n                 <div className='flex flex-row-wrap justify-between margin-row-small'>\r\n                    <Button large \r\n                            onClick={goBack}>\r\n                        <div className='flex flex-row'>\r\n                          <div className='min-margin-right'><ArrowBackOutlinedIcon className='btn-icon'/></div>\r\n                          <div>Back</div>\r\n                        </div>\r\n                    </Button>\r\n                 </div>\r\n                 {applications.length > 0\r\n                 ? applications.map(chunk =>\r\n                  <div className=\"row\">\r\n                    {chunk.map(application => \r\n                      <div className=\"col s6\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-title flex flex-row\">\r\n                              <div className='min-margin-right'>{application.applicant}</div>\r\n                              <div className='bm-item menu-item'\r\n                                   onClick={() => copyApplicant(application.applicant)}>\r\n                                     <ContentCopyOutlinedIcon className='btn-icon'/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                              <p className='preserve-newline'>{application.application}</p>\r\n                            </div>\r\n                          </div>\r\n                      </div>)}\r\n                  </div>)\r\n                 : <p>\r\n                      Currently there are no applications for the job. Come back later.\r\n                  </p>}\r\n          </>\r\n}\r\n\r\nexport default ApplicationOverview;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Iframe from 'react-iframe';\r\n\r\nconst Voting = ({daoData, loaded}) => {\r\n  const { dao } = useParams();\r\n\r\n  if(!loaded){\r\n    return <>\r\n              <header>\r\n                  <h1>{dao} Governance</h1>\r\n              </header>\r\n              <p>\r\n                  Loading...\r\n              </p>\r\n            </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{daoData.name} Governance</h1>\r\n                 </header>\r\n                 <div>\r\n                    <Iframe url={\"https://snapshot.org/#/sushigov.eth\"}\r\n                            position=\"relative\"\r\n                            overflow=\"hidden\"\r\n                            className='mockup-iframe'/>\r\n                  </div>\r\n          </>\r\n}\r\n\r\nexport default Voting;","export default __webpack_public_path__ + \"static/media/404.6fa35088.jpg\";","import React from 'react'\r\nimport Image404 from '../images/404.jpg';\r\n\r\nclass NotFound extends React.Component {\r\n   render() {\r\n      return <img src={Image404} alt=\"Nothing is here.\" \r\n                  width='900'\r\n                  style={{margin:'10em'}}/>;\r\n   }\r\n}\r\nexport default NotFound;","import React, { useState, useEffect } from 'react';\nimport SignIn from './components/SignIn';\nimport Layout from './layout';\nimport DaoLayout from './dao-layout';\nimport CreateDao from './components/CreateDao';\nimport DaoDashboard from './components/DaoDashboard';\nimport JobsOverview from './components/JobsOverview';\nimport JobDetail from './components/JobDetail';\nimport MembersOverview from './components/MembersOverview';\nimport TasksOverview from './components/TasksOverview';\nimport ApplicationOverview from './components/ApplicationOverview';\nimport Voting from './components/Voting';\nimport NotFound from './components/404.jsx';\nimport 'materialize-css/dist/css/materialize.css'\nimport './App.css';\nimport Big from 'big.js';\nimport { Route, Routes } from 'react-router-dom'\nvar version = require('../package.json').version;\nrequire('materialize-css');\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 14).toFixed();\n\nconst App = ({ contract, currentUser, nearConfig, wallet, provider, lastTransaction, error, roketoContract, wrapContract }) => {\n  const [message, setMessage] = useState('');\n  const [dao, setDao] = useState('');\n  const [daoData, setDaoData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  \n  useEffect(() => {\n      if (error){\n        setMessage(decodeURI(error));\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname + window.location.hash);\n      }\n      else if (lastTransaction && currentUser) {          \n        getState(lastTransaction, currentUser.accountId);\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname + window.location.hash);\n      }\n\n      async function getState(txHash, accountId) {\n        const result = await provider.txStatus(txHash, accountId);\n        //dao creation\n        let message = result.receipts_outcome[0].outcome.logs.pop();\n        if(!message){\n          //start job\n          message = result.receipts_outcome[3].outcome.logs.pop();\n        }\n        if(!message){\n          //receive payment\n          message = result.receipts_outcome[result.receipts_outcome.length-3].outcome.logs.pop();\n        }\n        if(!message && result.transaction.actions[0].FunctionCall.method_name === 'stop_stream'){\n          //TODO start update status contract call\n          message = \"Executed payment stream cancellation method.\"\n        }\n        if(message){\n          setMessage(message);\n        }\n      }\n  }, [lastTransaction, error, currentUser, provider]);\n  \n  useEffect(() => {\n      async function fetchData() {\n        if(!dao){\n          return;\n        }\n        const result = await contract.get_dao(\n        {\n          dao_owner: dao\n        });\n        console.log(result);\n        setDaoData(result);\n        setLoaded(true);\n      }\n      \n      fetchData();\n  }, [contract, currentUser, dao]);\n\n  const onCancelJob = (streamId) => {\n      roketoContract.stop_stream(\n        {\n          stream_id: streamId\n        },\n        BOATLOAD_OF_GAS,\n        1\n      ).then((_) => {\n        console.log(\"Successfully canceled.\");\n      })\n  }\n\n  const onStartJob = (jobId, contracted) => {\n      contract.start_job(\n        {\n          job_id: jobId,\n          contracted: contracted\n        },\n        BOATLOAD_OF_GAS,\n        Big('1').times(10 ** 22).toFixed()\n      ).then((_) => {\n        console.log(\"Successfully started.\");\n      })\n  }\n\n  const onDaoCreation = (e) => {\n    e.preventDefault();\n\n    const { fieldset, name_prompt, description_prompt, icon_prompt } = e.target.elements;\n    \n    fieldset.disabled = true;\n\n    contract.create_dao(\n      {\n        dao_owner_id: currentUser.accountId,\n        name: name_prompt.value,\n        description: description_prompt.value,\n        icon: icon_prompt.value ?? ''\n      },\n      BOATLOAD_OF_GAS,\n      Big('1').times(10 ** 25).toFixed()\n    )\n  }\n\n  const onJobCreation = (e) => {\n    e.preventDefault();\n\n    const { fieldset, name_prompt, description_prompt, payment_prompt, duration_prompt } = e.target.elements;\n    const payment = Big(payment_prompt.value).times(10 ** 24).toFixed();\n    \n    fieldset.disabled = true;\n\n    contract.create_job_offering(\n      {\n        name: name_prompt.value,\n        description: description_prompt.value,\n        payment: payment,\n        payment_cycle_in_s: duration_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      payment\n    ).then((_) => {\n      console.log(\"Successfully created job.\");\n    })\n  }\n\n  const onApplyForJob = (e) => {\n    e.preventDefault();\n\n    const { fieldset, job_id, application_prompt } = e.target.elements;\n    \n    fieldset.disabled = true;\n    \n    contract.apply_for_job(\n      {\n        dao_owner: dao,\n        job_id: job_id.value,\n        application: application_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      0\n    ).then((_) => {\n      fieldset.disabled = false;\n      application_prompt.value = '';\n      application_prompt.focus();\n      setMessage('Successfully applied for the job.');\n    })\n  }\n\n  const onEnablePayment = () => {\n    roketoContract.account_update_cron_flag(\n      {\n        is_cron_allowed: true\n      },\n      BOATLOAD_OF_GAS,\n      1\n    ).then((_) => {\n      console.log(\"Successfully enabled payment.\");\n    })\n  }\n\n  const onReceivePayment = (jobId) => {\n      contract.receive_job_payment(\n        {\n          dao_owner: dao,\n          job_id: jobId\n        },\n        BOATLOAD_OF_GAS,\n        Big('1').times(10 ** 21).toFixed()\n      ).then((_) => {\n        console.log(\"Successfully received payment.\");\n      })\n  }\n\n  const onUnwrap = async () => {\n    const balance = await wrapContract.ft_balance_of(\n      {\n        account_id: currentUser.accountId\n      }\n    );\n    await wrapContract.near_withdraw(\n      {\n        amount: balance\n      },\n      BOATLOAD_OF_GAS,\n      1\n    );\n    console.log(\"Successfully unwrapped.\");\n  }\n  \n  const signIn = () => {\n    wallet.requestSignIn(\n      {contractId: nearConfig.contractName, methodNames: [contract.cancel_job.name, \n                                                          contract.start_job.name, \n                                                          contract.create_job_offering.name,\n                                                          contract.apply_for_job.name]}, //contract requesting access\n      'NEAR Challenge #8 - DAO Dashboard', //optional name\n      null, //optional URL to redirect to if the sign in was successful\n      null //optional URL to redirect to if the sign in was NOT successful\n    );\n  };\n\n  const signOut = () => {\n    wallet.signOut();\n    window.location.reload(false);\n  };\n\n  const clearMessage = () => {\n    setMessage('');\n  };\n\n  if(!currentUser){\n    return <SignIn signIn={signIn}/>;\n  }\n  // Voting https://snapshot.org/#/sushigov.eth\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout currentUser={currentUser} signIn={signIn} signOut={signOut} clearMessage={clearMessage} message={message}/>}>\n        <Route index element={<CreateDao version={version} currentUser={currentUser} contract={contract} onDaoCreation={onDaoCreation}/>}/>\n        <Route path=\":dao\" element={<DaoLayout setDao={setDao}/>}>\n          <Route index element={<DaoDashboard daoData={daoData} loaded={loaded}/>}/>\n          <Route path=\"jobs\">\n            <Route index element={<JobsOverview daoData={daoData} loaded={loaded} onJobCreation={onJobCreation} currentUser={currentUser}/>}/>\n            <Route path=\":job\" element={<JobDetail daoData={daoData} currentUser={currentUser} \n                                                   onCancelJob={onCancelJob} onStartJob={onStartJob} \n                                                   onApplyForJob={onApplyForJob} roketoContract={roketoContract}\n                                                   onEnablePayment={onEnablePayment} onReceivePayment={onReceivePayment}\n                                                   wrapContract={wrapContract} onUnwrap={onUnwrap}/>}/>\n            {currentUser.accountId === dao\n              ? <Route path=\":job/applications\" element={<ApplicationOverview daoData={daoData}/>}/>\n              : null\n            }\n          </Route>\n          <Route path=\"tasks\">\n            <Route index element={<TasksOverview daoData={daoData} loaded={loaded}/>}/>\n          </Route>\n          <Route path=\"members\">\n            <Route index element={<MembersOverview daoData={daoData}/>}/>\n          </Route>\n          <Route path=\"governance\">\n            <Route index element={<Voting daoData={daoData} loaded={loaded}/>}/>\n          </Route>\n          <Route path=\"*\" element={<NotFound/>}/>\n        </Route>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport getConfig from './config.js';\nimport * as nearAPI from 'near-api-js';\n\n// Initializing contract\nasync function initContract() {\n  \n  // get network configuration values from config.js\n  // based on the network ID we pass to getConfig()\n  const nearConfig = getConfig(process.env.NEAR_ENV || 'testnet');\n\n  // create a keyStore for signing transactions using the user's key\n  // which is located in the browser local storage after user logs in\n  const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n\n  // Initializing connection to the NEAR testnet\n  const near = await nearAPI.connect({ keyStore, ...nearConfig });\n\n  // Initialize wallet connection\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in user's account data\n  let currentUser;\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      // Gets the accountId as a string\n      accountId: walletConnection.getAccountId(),\n      // Gets the user's token balance\n      balance: (await walletConnection.account().state()).amount,\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(\n    // User's accountId as a string\n    walletConnection.account(),\n    // accountId of the contract we will be loading\n    // NOTE: All contracts on NEAR are deployed to an account and\n    // accounts can only have one contract deployed to them.\n    nearConfig.contractName,\n    {\n      // View methods are read-only – they don't modify the state, but usually return some value\n      viewMethods: ['get_dao', 'get_daos'],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: ['cancel_job', 'start_job', 'create_job_offering', 'apply_for_job', 'create_dao', 'receive_job_payment'],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.getAccountId(),\n    }\n  );\n\n  // Initializing our contract APIs by contract name and configuration\n  const roketoContract = await new nearAPI.Contract(\n    // User's accountId as a string\n    walletConnection.account(),\n    // accountId of the contract we will be loading\n    // NOTE: All contracts on NEAR are deployed to an account and\n    // accounts can only have one contract deployed to them.\n    \"streaming-r-v2.dcversus.testnet\",\n    {\n      // View methods are read-only – they don't modify the state, but usually return some value\n      viewMethods: ['get_stream', 'get_account'],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: ['account_update_cron_flag', 'stop_stream'],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.getAccountId(),\n    }\n  );\n\n  // Initializing our contract APIs by contract name and configuration\n  const wrapContract = await new nearAPI.Contract(\n    // User's accountId as a string\n    walletConnection.account(),\n    // accountId of the contract we will be loading\n    // NOTE: All contracts on NEAR are deployed to an account and\n    // accounts can only have one contract deployed to them.\n    \"wrap.testnet\",\n    {\n      // View methods are read-only – they don't modify the state, but usually return some value\n      viewMethods: ['ft_balance_of'],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: ['near_withdraw'],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.getAccountId(),\n    }\n  );\n  \n  const provider = near.connection.provider;\n  \n  return { contract, currentUser, nearConfig, walletConnection, provider, roketoContract, wrapContract };\n}\n\nwindow.nearInitPromise = initContract().then(\n  ({ contract, currentUser, nearConfig, walletConnection, provider, roketoContract, wrapContract }) => {\n    let urlParams = new URLSearchParams(window.location.search);\n    let lastTransaction;\n    if(urlParams.has('transactionHashes')){\n        lastTransaction = urlParams.get('transactionHashes');\n    }\n    let errorMessage;\n    if(urlParams.has('errorMessage')){\n        errorMessage = urlParams.get('errorMessage');\n    }\n    ReactDOM.render(\n\t  <Router>\n        <App\n          contract={contract}\n          currentUser={currentUser}\n          nearConfig={nearConfig}\n          wallet={walletConnection}\n          lastTransaction={lastTransaction}\n          provider={provider}\n          error={errorMessage}\n          roketoContract={roketoContract}\n          wrapContract={wrapContract}\n        />\n\t  </Router>,\n      document.getElementById('root')\n    );\n  }\n);\n\n"],"sourceRoot":""}