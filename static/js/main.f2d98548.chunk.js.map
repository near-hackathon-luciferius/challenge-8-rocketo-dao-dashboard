{"version":3,"sources":["config.js","components/SignIn.jsx","components/Popup.jsx","layout.js","dao-layout.js","components/DaoCreationForm.jsx","components/CreateDao.jsx","components/DaoDashboard.jsx","components/JobForm.jsx","components/JobsOverview.jsx","components/JobDetailAdminCommands.jsx","components/ApplicationForm.jsx","components/JobDetail.jsx","components/MembersOverview.jsx","components/TasksOverview.jsx","components/ApplicationOverview.jsx","images/404.jpg","components/404.jsx","App.js","index.js"],"names":["CONTRACT_NAME","process","module","exports","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error","SignIn","signIn","id","large","onClick","className","Popup","props","handleClose","content","Layout","currentUser","signOut","clearMessage","message","floating","icon","fontSize","tooltip","accountId","setDao","dao","useParams","useEffect","pageWrapId","outerContainerId","to","DaoCreationForm","onDaoCreation","onSubmit","autoComplete","autoFocus","label","required","type","small","CreateDao","version","contract","navigate","useNavigate","useState","ownsDao","setOwnsDao","loaded","setLoaded","daos","setDaos","a","get_daos","result","console","log","includes","fetchData","target","length","map","DaoDashboard","daoData","members","setMembers","tasks","setTasks","jobs","setJobs","Math","floor","random","name","src","alt","description","JobForm","onJobCreation","defaultValue","min","step","JobsOverview","openJobs","setOpenJobs","runningJobs","setRunningJobs","canceledJobs","setCanceledJobs","splitArrayIntoChunksOfLen","filter","j","state","arr","len","chunks","i","n","push","slice","chunk","job","JobDetailAdminCommands","jobData","onCancelJob","onStartJob","contracted","setContracted","onChange","e","value","ApplicationForm","onApplyForJob","jobId","inputClassName","JobDetail","setJobData","jobPayment","setJobPayment","data","find","duration","parseInt","payment_cycle_in_s","seconds","minutes","hours","days","Big","payment","div","toFixed","applicants","payment_stream_id","url","position","overflow","MembersOverview","TasksOverview","ApplicationOverview","applications","setApplications","jobName","setJobName","copyApplicant","applicant","navigator","clipboard","writeText","application","NotFound","Image404","width","style","margin","React","Component","require","BOATLOAD_OF_GAS","times","App","nearConfig","wallet","provider","lastTransaction","error","setMessage","setDaoData","txHash","txStatus","receipts_outcome","outcome","logs","pop","decodeURI","window","history","pushState","location","origin","pathname","hash","getState","get_dao","dao_owner","requestSignIn","contractId","methodNames","cancel_job","start_job","create_job_offering","apply_for_job","path","element","reload","index","preventDefault","elements","fieldset","name_prompt","description_prompt","icon_prompt","disabled","create_dao","dao_owner_id","payment_prompt","duration_prompt","then","_","job_id","application_prompt","focus","getConfig","NEAR_ENV","keyStore","nearAPI","BrowserLocalStorageKeyStore","near","walletConnection","getAccountId","account","amount","balance","viewMethods","changeMethods","sender","connection","nearInitPromise","initContract","errorMessage","urlParams","URLSearchParams","search","has","get","ReactDOM","render","document","getElementById"],"mappings":"mHAAA,IAAMA,EAAgBC,qKAAYD,eAAiB,uCA0DnDE,EAAOC,QAxDP,SAAmBC,GACjB,OAAOA,GACL,IAAK,aACL,IAAK,UACH,MAAO,CACLC,UAAW,UACXC,QAAS,+BACTC,aAAcP,EACdQ,UAAW,0BACXC,UAAW,mCAEf,IAAK,cACL,IAAK,UACH,MAAO,CACLJ,UAAW,UACXC,QAAS,+BACTC,aAAcP,EACdQ,UAAW,kCACXC,UAAW,mCAEf,IAAK,UACH,MAAO,CACLJ,UAAW,UACXC,QAAS,+BACTC,aAAcP,EACdQ,UAAW,kCACXC,UAAW,mCAEf,IAAK,QACH,MAAO,CACLJ,UAAW,QACXC,QAAS,wBACTI,QAAQ,GAAD,OAAKT,qKAAYU,KAAjB,6BACPH,UAAW,+BACXD,aAAcP,GAElB,IAAK,OACL,IAAK,KACH,MAAO,CACLK,UAAW,cACXC,QAAS,kCACTC,aAAcP,EACdY,cAAe,aAEnB,IAAK,aACH,MAAO,CACLP,UAAW,sBACXC,QAAS,kCACTC,aAAcP,EACdY,cAAe,aAEnB,QACE,MAAMC,MAAM,6BAAD,OAA8BT,EAA9B,8C,0/CCnDF,SAASU,EAAT,GAA2B,IAAVC,EAAS,EAATA,OAC9B,OACE,mCACE,uBAAMC,GAAG,eAAT,UACE,iCACc,uDAEd,cAAC,SAAD,CAAQC,OAAK,EAACC,QAASH,EAAQI,UAAU,QAAzC,oBACA,8J,6CCEOC,EAXD,SAAAC,GACZ,OACE,qBAAKF,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAaD,QAASG,EAAMC,YAA5C,eACCD,EAAME,cC+BAC,EA9BA,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,YAAaV,EAA4C,EAA5CA,OAAQW,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,QAC3D,OACE,mCACE,sBAAKZ,GAAG,MAAR,UACI,cAAC,IAAD,IACES,EACE,cAAC,SAAD,CAAQP,QAASQ,EAASG,UAAQ,EAACZ,OAAK,EAACE,UAAU,YAAYW,KAAM,cAAC,IAAD,CAA0BC,SAAS,QAAQZ,UAAU,aAAea,QAAS,WAAaP,EAAYQ,UAAY,MACvL,cAAC,SAAD,CAAQf,QAASH,EAAQc,UAAQ,EAACZ,OAAK,EAACE,UAAU,YAAYW,KAAM,cAAC,IAAD,CAAiBC,SAAS,QAAQZ,UAAU,aAAea,QAAQ,8BAE1IJ,GAAW,cAAC,EAAD,CACVL,QAAS,qCACP,kDACA,4BAAIK,OAENN,YAAaK,U,QCeVH,EAjCA,SAAC,GAAc,IAAbU,EAAY,EAAZA,OACPC,EAAQC,cAARD,IAKR,OAJAE,qBAAU,WACRH,EAAOC,KACN,CAACA,EAAKD,IAGP,qCACE,eAAC,QAAD,CAAMI,WAAa,eAAiBC,iBAAmB,MAAvD,UACE,cAAC,IAAD,CAAMpB,UAAU,YAAYqB,GAAG,GAA/B,2BAIA,cAAC,IAAD,CAAMrB,UAAU,YAAYqB,GAAG,OAA/B,kBAIA,cAAC,IAAD,CAAMrB,UAAU,YAAYqB,GAAG,QAA/B,mBAIA,cAAC,IAAD,CAAMrB,UAAU,YAAYqB,GAAG,UAA/B,wBAKF,sBAAMxB,GAAG,eAAT,SACE,cAAC,IAAD,UC5BO,SAASyB,EAAT,GAA6C,IAAlBC,EAAiB,EAAjBA,cACxC,OACE,sBAAMC,SAAUD,EAAhB,SACE,2BAAU1B,GAAG,WAAWG,UAAU,uCAAlC,UACE,sBAAKA,UAAU,0BAAf,UACE,kDACA,gIACkG,uBADlG,6EAIE,cAAC,YAAD,CACMyB,aAAa,MACbC,WAAS,EACT7B,GAAG,cACH8B,MAAM,wBACNC,UAAQ,IAEd,cAAC,WAAD,CACM/B,GAAG,qBACH8B,MAAM,sCACNC,UAAQ,IAEd,cAAC,YAAD,CACMH,aAAa,MACb5B,GAAG,cACH8B,MAAM,yCAGhB,cAAC,SAAD,CAAQE,KAAK,SAASC,OAAK,EACnBjB,QAAQ,8CADhB,yB,qBCxBO,SAASkB,EAAT,GAAqE,IAAjDC,EAAgD,EAAhDA,QAAS1B,EAAuC,EAAvCA,YAAa2B,EAA0B,EAA1BA,SAAUV,EAAgB,EAAhBA,cAC3DW,EAAWC,cACjB,EAAgCC,oBAAS,GAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAQG,EAAR,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAQK,EAAR,KAAcC,EAAd,KAEAxB,qBAAU,WAAM,4CACZ,4BAAAyB,EAAA,sEACuBV,EAASW,SAAS,IADzC,OACQC,EADR,OAEEC,QAAQC,IAAIF,GACZP,EAAWO,EAAOG,SAAS1C,EAAYQ,YACvC4B,EAAQG,GACRL,GAAU,GALZ,4CADY,uBAAC,WAAD,wBASZS,KACD,CAAChB,EAAU3B,IAMd,OACE,mCACE,uBAAMT,GAAG,eAAT,UACE,iCACI,sEAAyCmC,OAE5CO,EACC,qBAAKvC,UAAU,sDAAf,SACGqC,EACA,cAAC,SAAD,CAAQvC,OAAK,EACNC,QAAS,kBAdVmD,EAcwB5C,EAAYQ,eAbnDoB,EAASgB,GADK,IAACA,GAaN,SAEG,sBAAKlD,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,cAAC,IAAD,CAA0BA,UAAU,eACtE,uDAGL,cAACsB,EAAD,CAAiBC,cAAeA,MAEnC,KACF,qDAGA,mDACA,qBAAKvB,UAAU,gBAAf,SACGyC,EAAKU,OAAS,EACbV,EAAKW,KAAI,SAAApC,GAAG,OACV,eAAC,IAAD,CAAMhB,UAAU,+DAA+DqB,GAAIL,EAAnF,UACE,qBAAKhB,UAAU,mBAAf,SAAkC,cAAC,IAAD,CAA0BA,UAAU,eACtE,8BAAMgB,UAEX,Y,yDCrDI,SAASqC,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,QAASf,EAAS,EAATA,OACrCvB,EAAQC,cAARD,IACR,EAA8BoB,mBAAS,IAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KACA,EAA0BpB,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KACA,EAAwBtB,mBAAS,IAAjC,mBAAOuB,EAAP,KAAaC,EAAb,KAYA,OAVA1C,qBAAU,WACJoC,EAAQK,OAIZC,EAAQN,EAAQK,KAAKR,QACrBO,EAASG,KAAKC,MAAsB,GAAhBD,KAAKE,WACzBP,EAAWK,KAAKC,MAAsB,IAAhBD,KAAKE,cAC1B,CAACT,IAEAf,EAYF,qCACE,iCACI,+BAAKe,EAAQU,KAAb,cAA8BV,EAAQ3C,KAAO,qBAAKsD,IAAKX,EAAQ3C,KAAMuD,IAAI,WAAWlE,UAAU,aAAc,UAEhH,sBAAKA,UAAU,gCAAf,UACE,cAAC,IAAD,CAAMA,UAAU,kDAAkDqB,GAAG,UAArE,SACE,qBAAKrB,UAAU,kBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,cAAC,IAAD,CAAuBA,UAAU,aACjC,mBAAGA,UAAU,QAAb,wBAEF,qBAAKA,UAAU,iBAAf,SACE,6BAAKuD,eAMf,cAAC,IAAD,CAAMvD,UAAU,kDAAkDqB,GAAG,QAArE,SACE,qBAAKrB,UAAU,kBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,aAC5B,mBAAGA,UAAU,QAAb,sBAEF,qBAAKA,UAAU,iBAAf,SACE,6BAAKyD,eAMf,cAAC,IAAD,CAAMzD,UAAU,8BAA8BqB,GAAG,OAAjD,SACE,qBAAKrB,UAAU,kBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,cAAC,IAAD,CAAyBA,UAAU,aACnC,mBAAGA,UAAU,QAAb,qBAEF,qBAAKA,UAAU,iBAAf,SACE,6BAAK2D,kBAOjB,mBAAG3D,UAAU,+BAAb,SACKsD,EAAQa,iBA/DR,qCACG,iCACI,+BAAKnD,EAAL,kBAEJ,8CCxBC,SAASoD,EAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,cAChC,OACE,sBAAM7C,SAAU6C,EAAhB,SACE,2BAAUxE,GAAG,WAAWG,UAAU,uCAAlC,UACE,sBAAKA,UAAU,0BAAf,UACE,2DACA,wGACA,cAAC,YAAD,CACQyB,aAAa,MACbC,WAAS,EACT7B,GAAG,cACH8B,MAAM,uBACNC,UAAQ,IAEd,cAAC,WAAD,CACM/B,GAAG,qBACH8B,MAAM,qCACNC,UAAQ,IAEd,cAAC,YAAD,CACMH,aAAa,MACb5B,GAAG,iBACHyE,aAAc,IACdC,IAAI,IACJC,KAAK,IACL3C,KAAK,SACLF,MAAM,qCACNC,UAAQ,IAEd,cAAC,YAAD,CACMH,aAAa,MACb5B,GAAG,kBACHyE,aAAc,SACdC,IAAI,IACJC,KAAK,IACL3C,KAAK,SACLF,MAAM,uCACNC,UAAQ,OAGlB,cAAC,SAAD,CAAQC,KAAK,SAASC,OAAK,EACnBjB,QAAQ,mDADhB,yBCvCR,IAiGe4D,EAjGM,SAAC,GAAmD,IAAlDnB,EAAiD,EAAjDA,QAASf,EAAwC,EAAxCA,OAAQjC,EAAgC,EAAhCA,YAAa+D,EAAmB,EAAnBA,cAC3CrD,EAAQC,cAARD,IACR,EAAkCoB,mBAAS,IAA3C,mBAAQsC,EAAR,KAAkBC,EAAlB,KACA,EAAwCvC,mBAAS,IAAjD,mBAAQwC,EAAR,KAAqBC,EAArB,KACA,EAA0CzC,mBAAS,IAAnD,mBAAQ0C,EAAR,KAAsBC,EAAtB,KAEA7D,qBAAU,WACJoC,EAAQK,OAGZgB,EAAYK,EAA0B1B,EAAQK,KAAKsB,QAAO,SAACC,GAAD,MAAmB,SAAZA,EAAEC,SAAmB,IACtFN,EAAeG,EAA0B1B,EAAQK,KAAKsB,QAAO,SAACC,GAAD,MAAmB,eAAZA,EAAEC,SAAyB,IAC/FJ,EAAgBC,EAA0B1B,EAAQK,KAAKsB,QAAO,SAACC,GAAD,MAAmB,aAAZA,EAAEC,SAAuB,OAC7F,CAAC7B,IAEJ,IAAM0B,EAA4B,SAACI,EAAKC,GAEtC,IADA,IAAIC,EAAS,GAAIC,EAAI,EAAGC,EAAIJ,EAAIjC,OACzBoC,EAAIC,GACTF,EAAOG,KAAKL,EAAIM,MAAMH,EAAGA,GAAKF,IAEhC,OAAOC,GAGT,OAAI/C,EASI,qCACO,iCACE,+BAAKe,EAAQU,KAAb,qBAED,2CACCU,EAASvB,OAAS,EACjBuB,EAAStB,KAAI,SAAAuC,GAAK,OAClB,qBAAK3F,UAAU,MAAf,SACG2F,EAAMvC,KAAI,SAAAwC,GAAG,OACZ,qBAAK5F,UAAU,SAAf,SACE,cAAC,IAAD,CAAMA,UAAU,oBAAoBqB,GAAIuE,EAAI/F,GAA5C,SACE,sBAAKG,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SAA6B4F,EAAI5B,OACjC,qBAAKhE,UAAU,eAAf,SACE,mBAAGA,UAAU,mBAAb,SAAiC4F,EAAIzB,+BAMjD,4EAGF,6CACCS,EAAYzB,OAAS,EACpByB,EAAYxB,KAAI,SAAAuC,GAAK,OACrB,qBAAK3F,UAAU,MAAf,SACG2F,EAAMvC,KAAI,SAAAwC,GAAG,OACZ,qBAAK5F,UAAU,SAAf,SACE,cAAC,IAAD,CAAMA,UAAU,oBAAoBqB,GAAIuE,EAAI/F,GAA5C,SACE,sBAAKG,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SAA6B4F,EAAI5B,OACjC,qBAAKhE,UAAU,eAAf,SACE,mBAAGA,UAAU,mBAAb,SAAiC4F,EAAIzB,+BAMjD,oEAGF,+CACCW,EAAa3B,OAAS,EACrB2B,EAAa1B,KAAI,SAAAuC,GAAK,OACtB,qBAAK3F,UAAU,MAAf,SACG2F,EAAMvC,KAAI,SAAAwC,GAAG,OACZ,qBAAK5F,UAAU,SAAf,SACE,cAAC,IAAD,CAAMA,UAAU,oBAAoBqB,GAAIuE,EAAI/F,GAA5C,SACE,sBAAKG,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SAA6B4F,EAAI5B,OACjC,qBAAKhE,UAAU,eAAf,SACE,mBAAGA,UAAU,mBAAb,SAAiC4F,EAAIzB,+BAMjD,sEAGAnD,IAAQV,EAAYQ,UAAa,cAACsD,EAAD,CAASC,cAAeA,IAAmB,QArErF,qCACG,iCACE,+BAAKrD,EAAL,qBAEF,gD,yBCqBC6E,EAjDgB,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,WACnD,EAAoC5D,qBAApC,mBAAO6D,EAAP,KAAmBC,EAAnB,KACMhE,EAAWC,cAUnB,IAAI2D,EACF,OAAO,KAGT,OAAOA,EAAQX,OACX,IAAK,aACD,OAAO,mCACG,cAAC,SAAD,CAAQrF,OAAK,EACLe,QAAQ,+FACRd,QAAS,kBAAMgG,EAAYD,EAAQjG,KAF3C,+BAMd,IAAK,OACD,OAAO,qCACG,qBAAKG,UAAU,8CAAf,SACI,cAAC,YAAD,CACIyB,aAAa,MACbE,MAAM,qCACNwE,SA3BC,SAAAC,GACrBF,EAAcE,EAAElD,OAAOmD,YA6BX,cAAC,SAAD,CAAQvG,OAAK,EACLe,QAAQ,yDACRd,QAAS,kBAAMiG,EAAWF,EAAQjG,GAAIoG,IACtCjG,UAAWiG,EAAY,sBAAsB,+BAHrD,yCAMA,cAAC,SAAD,CAAQnG,OAAK,EACLC,QAjCC,WACrBmC,EAAS,iBA+BG,kCAKd,QAAS,OAAO,OC9CP,SAASoE,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,cAAeC,EAAS,EAATA,MACvD,OACE,sBAAMhF,SAAU+E,EAAhB,SACE,2BAAU1G,GAAG,WAAWG,UAAU,uCAAlC,UACE,sBAAKA,UAAU,0BAAf,UACE,mDACA,kFACA,cAAC,YAAD,CACMyB,aAAa,MACb5B,GAAG,SACH8B,MAAM,gCACNC,UAAQ,EACR6E,eAAe,WACfJ,MAAOG,IAEb,cAAC,WAAD,CACM9E,WAAS,EACT7B,GAAG,qBACH8B,MAAM,kDACNC,UAAQ,OAGhB,cAAC,SAAD,CAAQC,KAAK,SAASC,OAAK,EACnBjB,QAAQ,uFADhB,wBClBR,IAyFe6F,EAzFG,SAAC,GAAoE,IAAnEpD,EAAkE,EAAlEA,QAAShD,EAAyD,EAAzDA,YAAayF,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,WAAYO,EAAmB,EAAnBA,cACjE,EAAqBtF,cAAbD,EAAR,EAAQA,IAAK4E,EAAb,EAAaA,IACb,EAAgCxD,qBAAhC,mBAAQ0D,EAAR,KAAiBa,EAAjB,KACA,EAAsCvE,qBAAtC,mBAAQwE,EAAR,KAAoBC,EAApB,KA+BA,OA7BA3F,qBAAU,WACR,GAAIoC,EAAQK,KAAZ,CAIA,IAAImD,EAAOxD,EAAQK,KAAKoD,MAAK,SAAC7B,GAAD,OAAOA,EAAErF,KAAO+F,KACzCoB,EAAWC,SAASH,EAAKI,oBACzBC,EAAUH,EAAS,GACnBI,EAAUvD,KAAKC,MAAOkD,EAAS,KAAS,IACxCK,EAAQxD,KAAKC,MAAOkD,EAAS,MAAV,MACnBM,EAAOzD,KAAKC,MAAMkD,EAAS,OAC/BA,EAAW,GACRM,IACDN,GAAY,IAAMM,EAAO,KAExBD,IACDL,GAAY,IAAMK,EAAQ,KAEzBD,IACDJ,GAAY,IAAMI,EAAU,KAE3BD,IACDH,GAAY,IAAMG,EAAU,KAE9BL,EAAKE,SAAWA,EAChBL,EAAWG,GACXD,EAAcU,IAAIT,EAAKU,SAASC,IAAlB,SAAsB,GAAM,KAAIC,QAAQ,OACrD,CAACpE,EAASsC,IAETE,EASI,qCACO,iCACE,+BAAKA,EAAQ9B,KAAb,kBAEF,qBAAKhE,UAAU,sDAAf,SACGM,EAAYQ,YAAcE,EAAM,cAAC,EAAD,CAAwB8E,QAASA,EAASC,YAAaA,EAAaC,WAAYA,IAAgB,OAEnI,sBAAKhG,UAAU,qCAAf,UACG,sBAAKA,UAAU,2DAAf,UACE,qBAAKA,UAAU,gDAAf,SACG8F,EAAQ3B,cAEX,sBAAKnE,UAAU,wCAAf,UACE,qBAAKA,UAAU,oCAAf,qBACA,8BAAM8F,EAAQX,WAEhB,sBAAKnF,UAAU,wCAAf,UACE,qBAAKA,UAAU,oCAAf,4BACA,gCAAM4G,EAAN,gBAEF,sBAAK5G,UAAU,wCAAf,UACE,qBAAKA,UAAU,oCAAf,gCACA,8BAAM8F,EAAQkB,cAEhB,sBAAKhH,UAAU,wCAAf,UACE,qBAAKA,UAAU,oCAAf,2BACA,8BAAM8F,EAAQ6B,WAAWxE,YAE3B,sBAAKnD,UAAU,wCAAf,UACE,qBAAKA,UAAU,oCAAf,yBACA,8BAAM8F,EAAQG,mBAGjBH,EAAQ8B,kBACL,8BACE,cAAC,IAAD,CAAQC,IAAK,sCAAsC/B,EAAQ8B,kBACnDE,SAAS,WACTC,SAAS,SACT/H,UAAU,oBAEpB,QAELgB,IAAQV,EAAYQ,WAA+B,SAAlBgF,EAAQX,MAAoB,qBAAKnF,UAAU,iBAAf,SAAgC,cAACsG,EAAD,CAAiBC,cAAeA,EAAeC,MAAOV,EAAQjG,OAAc,QAlDjL,qCACG,iCACE,+BAAK+F,EAAL,kBAEF,gDC9BCoC,EAbS,WACtB,IAAQhH,EAAQC,cAARD,IAEP,OAAO,qCACO,iCACE,+BAAKA,EAAL,kBAEF,kDCqBFiH,EA3BO,SAAC,GAAuB,IAAtB3E,EAAqB,EAArBA,QAASf,EAAY,EAAZA,OACvBvB,EAAQC,cAARD,IAER,OAAIuB,EAWI,qCACO,iCACE,+BAAKe,EAAQU,KAAb,sBAEF,8BACG,cAAC,IAAD,CAAQ6D,IAAK,qCACLC,SAAS,WACTC,SAAS,SACT/H,UAAU,qBAlB3B,qCACG,iCACI,+BAAKgB,EAAL,kBAEJ,+C,oCCyECkH,EA/Ea,SAAC,GAAe,IAAd5E,EAAa,EAAbA,QACpBsC,EAAQ3E,cAAR2E,IACR,EAA0CxD,qBAA1C,mBAAQ+F,EAAR,KAAsBC,EAAtB,KACA,EAAgChG,qBAAhC,mBAAQiG,EAAR,KAAiBC,EAAjB,KACMpG,EAAWC,cAEjBjB,qBAAU,WACR,GAAIoC,EAAQK,KAAZ,CAIA,IAAImD,EAAOxD,EAAQK,KAAKoD,MAAK,SAAC7B,GAAD,OAAOA,EAAErF,KAAO+F,KAC7CwC,EAAgBpD,EAA0B8B,EAAKa,WAAW,IAC1DW,EAAWxB,EAAK9C,SACf,CAACV,EAASsC,IAEb,IAAMZ,EAA4B,SAACI,EAAKC,GAEtC,IADA,IAAIC,EAAS,GAAIC,EAAI,EAAGC,EAAIJ,EAAIjC,OACzBoC,EAAIC,GACTF,EAAOG,KAAKL,EAAIM,MAAMH,EAAGA,GAAKF,IAEhC,OAAOC,GAOHiD,EAAa,uCAAG,WAAOC,GAAP,SAAA7F,EAAA,sEACd8F,UAAUC,UAAUC,UAAUH,GADhB,2CAAH,sDAInB,OAAIL,EASI,qCACO,iCACE,+BAAKE,EAAL,uBAEF,qBAAKrI,UAAU,sDAAf,SACG,cAAC,SAAD,CAAQF,OAAK,EACLC,QAvBX,WACXmC,GAAU,IAqBI,SAEI,sBAAKlC,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,cAAC,IAAD,CAAuBA,UAAU,eACnE,8CAIRmI,EAAahF,OAAS,EACrBgF,EAAa/E,KAAI,SAAAuC,GAAK,OACvB,qBAAK3F,UAAU,MAAf,SACG2F,EAAMvC,KAAI,SAAAwF,GAAW,OACpB,qBAAK5I,UAAU,SAAf,SACE,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmC4I,EAAYJ,YAC/C,qBAAKxI,UAAU,oBACVD,QAAS,kBAAMwI,EAAcK,EAAYJ,YAD9C,SAEO,cAAC,IAAD,CAAyBxI,UAAU,kBAG5C,qBAAKA,UAAU,eAAf,SACE,mBAAGA,UAAU,mBAAb,SAAiC4I,EAAYA,6BAKxD,qGAxCR,qCACG,iCACE,+BAAKhD,EAAL,uBAEF,gD,qCC3CC,OAA0B,gCCGnCiD,G,6JACH,WACG,OAAO,qBAAK5E,IAAK6E,GAAU5E,IAAI,mBACnB6E,MAAM,MACNC,MAAO,CAACC,OAAO,c,GAJVC,IAAMC,WAOdN,MCMX7G,I,cAAUoH,EAAQ,KAAmBpH,SACzCoH,EAAQ,KAER,IAAMC,GAAkB9B,IAAI,GAAG+B,MAAP,SAAa,GAAM,KAAI5B,UA8LhC6B,GA5LH,SAAC,GAAqF,IAAnFtH,EAAkF,EAAlFA,SAAU3B,EAAwE,EAAxEA,YAAakJ,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,gBAAiBC,EAAY,EAAZA,MACnF,EAA8BxH,mBAAS,IAAvC,mBAAO3B,EAAP,KAAgBoJ,EAAhB,KACA,EAAsBzH,mBAAS,IAA/B,mBAAOpB,EAAP,KAAYD,EAAZ,KACA,EAA8BqB,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBwG,EAAhB,KACA,EAA4B1H,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAtB,qBAAU,WAAM,4CAUZ,WAAwB6I,EAAQjJ,GAAhC,iBAAA6B,EAAA,sEACuB+G,EAASM,SAASD,EAAQjJ,GADjD,OACQ+B,EADR,QAGMpC,EAAUoC,EAAOoH,iBAAiB,GAAGC,QAAQC,KAAKC,SAGpD3J,EAAUoC,EAAOoH,iBAAiB,GAAGC,QAAQC,KAAKC,OAEjD3J,GACDoJ,EAAWpJ,GATf,2CAVY,wBACRmJ,GACFC,EAAWQ,UAAUT,IACrBU,OAAOC,QAAQC,UAAU,GAAI,GAAIF,OAAOG,SAASC,OAASJ,OAAOG,SAASE,SAAWL,OAAOG,SAASG,OAE9FjB,GAAmBrJ,KALhB,sCAMVuK,CAASlB,EAAiBrJ,EAAYQ,WACtCwJ,OAAOC,QAAQC,UAAU,GAAI,GAAIF,OAAOG,SAASC,OAASJ,OAAOG,SAASE,SAAWL,OAAOG,SAASG,SAexG,CAACjB,EAAiBC,EAAOtJ,EAAaoJ,IAEzCxI,qBAAU,WAAM,4CACZ,4BAAAyB,EAAA,yDACM3B,EADN,iEAIuBiB,EAAS6I,QAC9B,CACEC,UAAW/J,IANf,OAIQ6B,EAJR,OAQEC,QAAQC,IAAIF,GACZiH,EAAWjH,GACXL,GAAU,GAVZ,4CADY,uBAAC,WAAD,wBAcZS,KACD,CAAChB,EAAU3B,EAAaU,IAE3B,IAyFMpB,EAAS,WACb6J,EAAOuB,cACL,CAACC,WAAYzB,EAAWpK,aAAc8L,YAAa,CAACjJ,EAASkJ,WAAWnH,KACpB/B,EAASmJ,UAAUpH,KACnB/B,EAASoJ,oBAAoBrH,KAC7B/B,EAASqJ,cAActH,OAC3E,oCACA,KACA,OAaJ,OAAI1D,EAKF,cAAC,IAAD,UACE,eAAC,IAAD,CAAOiL,KAAK,IAAIC,QAAS,cAAC,EAAD,CAAQlL,YAAaA,EAAaV,OAAQA,EAAQW,QAf/D,WACdkJ,EAAOlJ,UACP+J,OAAOG,SAASgB,QAAO,IAawEjL,aAV5E,WACnBqJ,EAAW,KASgHpJ,QAASA,IAAlI,UACE,cAAC,IAAD,CAAOiL,OAAK,EAACF,QAAS,cAACzJ,EAAD,CAAWC,QAASA,GAAS1B,YAAaA,EAAa2B,SAAUA,EAAUV,cA5FjF,SAAC6E,GAAO,IAAD,EAC3BA,EAAEuF,iBAEF,MAAmEvF,EAAElD,OAAO0I,SAApEC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,mBAAoBC,EAAnD,EAAmDA,YAEnDH,EAASI,UAAW,EAEpBhK,EAASiK,WACP,CACEC,aAAc7L,EAAYQ,UAC1BkD,KAAM8H,EAAYzF,MAClBlC,YAAa4H,EAAmB1F,MAChC1F,KAAI,UAAEqL,EAAY3F,aAAd,QAAuB,IAE7BgD,GACA9B,IAAI,KAAK+B,MAAT,SAAe,GAAM,KAAI5B,gBA8EvB,eAAC,IAAD,CAAO6D,KAAK,OAAOC,QAAS,cAAC,EAAD,CAAWzK,OAAQA,IAA/C,UACE,cAAC,IAAD,CAAO2K,OAAK,EAACF,QAAS,cAACnI,EAAD,CAAcC,QAASA,EAASf,OAAQA,MAC9D,eAAC,IAAD,CAAOgJ,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,CAAclI,QAASA,EAASf,OAAQA,EAAQ8B,cA7E1D,SAAC+B,GACrBA,EAAEuF,iBAEF,MAAuFvF,EAAElD,OAAO0I,SAAxFC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,mBAAoBK,EAAnD,EAAmDA,eAAgBC,EAAnE,EAAmEA,gBAC7D7E,EAAUD,IAAI6E,EAAe/F,OAAOiD,MAA1B,SAAgC,GAAM,KAAI5B,UAE1DmE,EAASI,UAAW,EAEpBhK,EAASoJ,oBACP,CACErH,KAAM8H,EAAYzF,MAClBlC,YAAa4H,EAAmB1F,MAChCmB,QAASA,EACTN,mBAAoBmF,EAAgBhG,OAEtCgD,GACA7B,GACA8E,MAAK,SAACC,GACNzJ,QAAQC,IAAI,iCA2D8FzC,YAAaA,MACjH,cAAC,IAAD,CAAOiL,KAAK,OAAOC,QAAS,cAAC,EAAD,CAAWlI,QAASA,EAAShD,YAAaA,EAAayF,YA1HzE,SAACS,GACjBvE,EAASkJ,WACP,CACEqB,OAAQhG,GAEV6C,GACA9B,IAAI,KAAK+B,MAAT,SAAe,GAAM,KAAI5B,WACzB4E,MAAK,SAACC,GACNzJ,QAAQC,IAAI,8BAkHqGiD,WA9GpG,SAACQ,EAAOP,GACvBhE,EAASmJ,UACP,CACEoB,OAAQhG,EACRP,WAAYA,GAEdoD,GACA9B,IAAI,KAAK+B,MAAT,SAAe,GAAM,KAAI5B,WACzB4E,MAAK,SAACC,GACNzJ,QAAQC,IAAI,6BAqG6HwD,cAxDzH,SAACH,GACrBA,EAAEuF,iBAEF,MAAiDvF,EAAElD,OAAO0I,SAAlDC,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,mBAE1BZ,EAASI,UAAW,EAEpBhK,EAASqJ,cACP,CACEP,UAAW/J,EACXwL,OAAQA,EAAOnG,MACfuC,YAAa6D,EAAmBpG,OAElCgD,GACA,GACAiD,MAAK,SAACC,GACNV,EAASI,UAAW,EACpBQ,EAAmBpG,MAAQ,GAC3BoG,EAAmBC,QACnB7C,EAAW,6CAsCJvJ,EAAYQ,YAAcE,EACvB,cAAC,IAAD,CAAOuK,KAAK,oBAAoBC,QAAS,cAAC,EAAD,CAAqBlI,QAASA,MACvE,QAGN,cAAC,IAAD,CAAOiI,KAAK,QAAZ,SACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,CAAelI,QAASA,EAASf,OAAQA,QAEjE,cAAC,IAAD,CAAOgJ,KAAK,UAAZ,SACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,CAAiBxJ,QAASA,GAASwH,WAAYA,QAEvE,cAAC,IAAD,CAAO+B,KAAK,IAAIC,QAAS,cAAC,GAAD,cAvBxB,cAAC7L,EAAD,CAAQC,OAAQA,K,4EC3K3B,wCAAA+C,EAAA,6DAIQ6G,EAAamD,KAAU7N,qKAAY8N,UAAY,WAI/CC,EAAW,IAAIC,aAAkBC,4BARzC,SAWqBD,WAAA,aAAkBD,YAAarD,IAXpD,UAWQwD,EAXR,SAcQC,EAAmB,IAAIH,oBAAyBE,IAIjCE,eAlBvB,6BAqBiBD,EAAiBC,eArBlC,UAuBsBD,EAAiBE,UAAUhI,QAvBjD,oBAuB0DiI,OAJtD9M,EAnBJ,CAqBMQ,UArBN,KAuBMuM,QAvBN,+BA4ByB,IAAIP,YAEzBG,EAAiBE,UAIjB3D,EAAWpK,aACX,CAEEkO,YAAa,CAAC,UAAW,YAEzBC,cAAe,CAAC,aAAc,YAAa,sBAAuB,gBAAiB,cAGnFC,OAAQP,EAAiBC,iBA1C/B,eA4BQjL,EA5BR,OA8CQyH,EAAWsD,EAAKS,WAAW/D,SA9CnC,kBAgDS,CAAEzH,WAAU3B,cAAakJ,aAAYyD,mBAAkBvD,aAhDhE,6C,sBAmDAY,OAAOoD,gB,2CAAkBC,GAAerB,MACtC,YAAwE,IAElE3C,EAIAiE,EANH3L,EAAoE,EAApEA,SAAU3B,EAA0D,EAA1DA,YAAakJ,EAA6C,EAA7CA,WAAYyD,EAAiC,EAAjCA,iBAAkBvD,EAAe,EAAfA,SAClDmE,EAAY,IAAIC,gBAAgBxD,OAAOG,SAASsD,QAEjDF,EAAUG,IAAI,uBACbrE,EAAkBkE,EAAUI,IAAI,sBAGjCJ,EAAUG,IAAI,kBACbJ,EAAeC,EAAUI,IAAI,iBAEjCC,IAASC,OACV,cAAC,IAAD,UACK,cAAC,GAAD,CACElM,SAAUA,EACV3B,YAAaA,EACbkJ,WAAYA,EACZC,OAAQwD,EACRtD,gBAAiBA,EACjBD,SAAUA,EACVE,MAAOgE,MAGXQ,SAASC,eAAe,c","file":"static/js/main.f2d98548.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'dao-dashboard.cryptosketches.testnet';\n\nfunction getConfig(env) {\n  switch(env) {\n    case 'production':\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org'\n      };\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org'\n      };\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org'\n      };\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME,\n      };\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    default:\n      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n  }\n}\n\nmodule.exports = getConfig;\n","import React from 'react';\nimport { Button } from 'react-materialize';\n\nexport default function SignIn({signIn}) {\n  return (\n    <>\n      <main id=\"page-wrapper\">\n        <header>\n                      <h1>Kawaii Zoo Homepage</h1>\n        </header>\n        <Button large onClick={signIn} className='login'>Log in</Button>\n        <p>\n            This app was developed for the NEAR Spring hackathon. \n            In order to use the app you need to sign in with your NEAR wallet.\n        </p>\n      </main>\n    </>\n  );\n}\n","import React from \"react\";\r\n\r\nconst Popup = props => {\r\n  return (\r\n    <div className=\"popup-box\">\r\n      <div className=\"box\">\r\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;","import React from 'react';\r\nimport { Outlet } from 'react-router-dom'\r\nimport { Button } from 'react-materialize';\r\nimport PropTypes from 'prop-types';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport BrokenImageIcon from '@mui/icons-material/BrokenImage';\r\nimport Popup from './components/Popup';\r\n\r\nconst Layout = ({currentUser, signIn, signOut, clearMessage, message}) => {\r\n  return (\r\n    <>\r\n      <div id=\"App\">\r\n          <Outlet/>\r\n          { currentUser\r\n            ? <Button onClick={signOut} floating large className='btn-login' icon={<AccountBalanceWalletIcon fontSize=\"large\" className=\"btn-icon\" />} tooltip={'Log out ' + currentUser.accountId + '.'} />\r\n            : <Button onClick={signIn} floating large className='btn-login' icon={<BrokenImageIcon fontSize=\"large\" className=\"btn-icon\" />} tooltip='Log in using NEAR wallet.' />\r\n          }        \r\n          {message && <Popup\r\n            content={<>\r\n              <b>A message for you</b>\r\n              <p>{message}</p>\r\n            </>}\r\n            handleClose={clearMessage}\r\n          />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  currentUser: PropTypes.shape({\r\n    accountId: PropTypes.string.isRequired,\r\n    balance: PropTypes.string.isRequired\r\n  }),\r\n  signIn: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Layout;","import React, {useEffect} from 'react';\r\nimport { Link, Outlet, useParams } from 'react-router-dom'\r\nimport { slide as Menu } from 'react-burger-menu';\r\n\r\nconst Layout = ({setDao}) => {\r\n  const { dao } = useParams();\r\n  useEffect(() => {\r\n    setDao(dao);\r\n  }, [dao, setDao]);\r\n\r\n  return (\r\n    <>\r\n      <Menu pageWrapId={ \"page-wrapper\" } outerContainerId={ \"App\" }>\r\n        <Link className=\"menu-item\" to=\"\">\r\n          Dao Dashboard\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"jobs\">\r\n          Jobs\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"tasks\">\r\n          Tasks\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"members\">\r\n          Members\r\n        </Link>\r\n      </Menu>\r\n      \r\n      <main id=\"page-wrapper\">\r\n        <Outlet/>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\nimport { TextInput, Button, Textarea } from 'react-materialize';\n\nexport default function DaoCreationForm({ onDaoCreation }) {\n  return (\n    <form onSubmit={onDaoCreation}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Create a new DAO</h5>\n          <p>\n             Hint: If you are looking for an existing DAO scroll down to see the list of all existing DAOs. <br/>\n             Add all required parameter for the new job and hit the 'Create' button.\n          </p>\n            <TextInput\n                  autoComplete=\"off\"\n                  autoFocus\n                  id=\"name_prompt\"\n                  label=\"The name of your DAO.\"\n                  required\n            />\n            <Textarea\n                  id=\"description_prompt\"\n                  label=\"A detailed description of your DAO.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"icon_prompt\"\n                  label=\"An URL to you DAO icon. Optional.\"\n            />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Creates the DAO. This will costs 10 Ⓝ.\">\n          Create\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DaoCreationForm from './DaoCreationForm';\nimport ArrowForwardOutlinedIcon from '@mui/icons-material/ArrowForwardOutlined'; \nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-materialize';\n\nexport default function CreateDao({version, currentUser, contract, onDaoCreation}) {\n  const navigate = useNavigate();\n  const [ ownsDao, setOwnsDao ] = useState(false);\n  const [ loaded, setLoaded ] = useState(false);\n  const [ daos, setDaos ] = useState([]);\n  \n  useEffect(() => {\n      async function fetchData() {\n        const result = await contract.get_daos({ });\n        console.log(result);\n        setOwnsDao(result.includes(currentUser.accountId));\n        setDaos(result);\n        setLoaded(true);\n      }\n      \n      fetchData();\n  }, [contract, currentUser]);\n\n  const goToDao = (target) => {\n    navigate(target);\n  }\n\n  return (\n    <>\n      <main id=\"page-wrapper\">\n        <header>\n            <h1>NEAR Challenge #8 - DAO Dashboard - {version}</h1>\n        </header>\n        {loaded\n        ? <div className='flex flex-row-wrap justify-between margin-row-small'>\n            {ownsDao\n            ?<Button large \n                    onClick={() => goToDao(currentUser.accountId)}>\n                <div className='flex flex-row'>\n                  <div className='min-margin-right'><ArrowForwardOutlinedIcon className='btn-icon'/></div>\n                  <div>Got To Your DAO</div>\n                </div>\n            </Button>\n            :<DaoCreationForm onDaoCreation={onDaoCreation}/>}\n          </div>\n        : null}\n        <p>\n            Description of idea.\n        </p>\n        <h5>All Existing DAOs</h5>\n        <div className='flex flex-col'>\n          {daos.length > 0\n          ? daos.map(dao => \n              <Link className='margin-row-small text-bigger bm-item menu-item flex flex-row' to={dao}>\n                <div className='min-margin-right'><ArrowForwardOutlinedIcon className='btn-icon'/></div>\n                <div>{dao}</div>\n              </Link>)\n          :null}\n        </div>\n      </main>\n    </>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\nimport TaskOutlinedIcon from '@mui/icons-material/TaskOutlined';\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\n\nexport default function DaoDashboard({daoData, loaded}) {\n  const { dao } = useParams();\n  const [members, setMembers] = useState('');\n  const [tasks, setTasks] = useState('');\n  const [jobs, setJobs] = useState('');\n\n  useEffect(() => {\n    if(!daoData.jobs){\n      return;\n    }\n    \n    setJobs(daoData.jobs.length);\n    setTasks(Math.floor(Math.random() * 10));\n    setMembers(Math.floor(Math.random() * 100));\n  }, [daoData]);\n\n  if(!loaded){\n    return <>\n              <header>\n                  <h1>{dao} Dashboard</h1>\n              </header>\n              <p>\n                  Loading...\n              </p>\n            </>\n  }\n\n  return (\n    <>\n      <header>\n          <h1>{daoData.name} Dashboard {daoData.icon ? <img src={daoData.icon} alt='DAO icon' className='dao-icon'/>: null}</h1>\n      </header>\n      <div className='flex flex-row justify-between'>\n        <Link className=\"bm-item menu-item flex-grow medium-margin-right\" to='members'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <PeopleAltOutlinedIcon className='icon-big'/>\n                  <p className='small'>Members</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{members}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n        <Link className=\"bm-item menu-item flex-grow medium-margin-right\" to='tasks'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <TaskOutlinedIcon className='icon-big'/>\n                  <p className='small'>Tasks</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{tasks}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n        <Link className=\"bm-item menu-item flex-grow\" to='jobs'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <WorkOutlineOutlinedIcon className='icon-big'/>\n                  <p className='small'>Jobs</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{jobs}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n      </div>\n      <p className='bigger-font preserve-newline'>\n          {daoData.description}\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport { TextInput, Button, Textarea } from 'react-materialize';\n\nexport default function JobForm({ onJobCreation }) {\n  return (\n    <form onSubmit={onJobCreation}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Create a new job offering</h5>\n          <p>Add all required parameter for the new job and hit the 'Create' button.</p>\n          <TextInput\n                  autoComplete=\"off\"\n                  autoFocus\n                  id=\"name_prompt\"\n                  label=\"The name of the job.\"\n                  required\n            />\n            <Textarea\n                  id=\"description_prompt\"\n                  label=\"A detailed description of the job.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"payment_prompt\"\n                  defaultValue={'1'}\n                  min=\"0\"\n                  step=\"1\"\n                  type=\"number\"\n                  label=\"The payment for the job in Ⓝ.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"duration_prompt\"\n                  defaultValue={'172800'}\n                  min=\"1\"\n                  step=\"1\"\n                  type=\"number\"\n                  label=\"The duration for the job offer in s.\"\n                  required\n            />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Creates the job and deposits the chosen payment.\">\n          Create\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport JobForm from './JobForm';\r\n\r\nconst JobsOverview = ({daoData, loaded, currentUser, onJobCreation}) => {\r\n  const { dao } = useParams();\r\n  const [ openJobs, setOpenJobs ] = useState([]);\r\n  const [ runningJobs, setRunningJobs ] = useState([]);\r\n  const [ canceledJobs, setCanceledJobs ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n    setOpenJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'Open'), 3));\r\n    setRunningJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'InProgress'), 3));\r\n    setCanceledJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'Canceled'), 3));\r\n  }, [daoData]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  if(!loaded){\r\n    return <>\r\n              <header>\r\n                <h1>{dao}'s Jobs Board</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{daoData.name}'s Jobs Board</h1>\r\n                 </header>\r\n                  <h5>Open Jobs</h5>\r\n                  {openJobs.length > 0\r\n                  ? openJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p className='preserve-newline'>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no open jobs available.\r\n                    </p>}\r\n                  <h5>Active Jobs</h5>\r\n                  {runningJobs.length > 0\r\n                  ? runningJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p className='preserve-newline'>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no active jobs.\r\n                    </p>}\r\n                  <h5>Canceled Jobs</h5>\r\n                  {canceledJobs.length > 0\r\n                  ? canceledJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p className='preserve-newline'>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no canceled jobs.\r\n                    </p>}\r\n                  {(dao === currentUser.accountId) ? <JobForm onJobCreation={onJobCreation}/> : null}\r\n          </>\r\n}\r\n\r\nexport default JobsOverview;","import React, {useState} from 'react';\r\nimport { Button, TextInput } from 'react-materialize';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst JobDetailAdminCommands = ({jobData, onCancelJob, onStartJob}) => {\r\n    const [contracted, setContracted] = useState();\r\n    const navigate = useNavigate();\r\n\r\n    const changeContracted = e => {\r\n        setContracted(e.target.value);\r\n    }\r\n\r\n    const goToApplications = () => {\r\n        navigate(\"applications\");\r\n    }\r\n\r\n  if(!jobData){\r\n    return null\r\n  }\r\n\r\n  switch(jobData.state){\r\n      case 'InProgress':\r\n          return <>\r\n                    <Button large \r\n                            tooltip='Canceles the payment an the job offering. Important: A new job has to be created afterwards.' \r\n                            onClick={() => onCancelJob(jobData.id)}>\r\n                        Cancel Contract\r\n                    </Button>\r\n                 </>\r\n      case 'Open':\r\n          return <>\r\n                    <div className=\"flex flex-col flex-grow medium-margin-right\">\r\n                        <TextInput\r\n                            autoComplete=\"off\"\r\n                            label=\"NEAR account id of the contracted.\"\r\n                            onChange={changeContracted}\r\n                        />\r\n                    </div>\r\n                    <Button large \r\n                            tooltip='Assigns the contracted and starts the job immediately.' \r\n                            onClick={() => onStartJob(jobData.id, contracted)}\r\n                            className={contracted ?'medium-margin-right':'medium-margin-right disabled'}>\r\n                                Assign Contracted And Start\r\n                    </Button>\r\n                    <Button large \r\n                            onClick={goToApplications}>\r\n                                View Applications\r\n                    </Button>\r\n                 </>\r\n      default: return null;\r\n  }\r\n}\r\n\r\nexport default JobDetailAdminCommands;","import React from 'react';\nimport { TextInput, Button, Textarea } from 'react-materialize';\n\nexport default function ApplicationForm({ onApplyForJob, jobId }) {\n  return (\n    <form onSubmit={onApplyForJob}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Apply for the job</h5>\n          <p>Write your most inspiring application down below.</p>\n          <TextInput\n                autoComplete=\"off\"\n                id=\"job_id\"\n                label=\"The job ID. Do not change it!\"\n                required\n                inputClassName='disabled'\n                value={jobId}\n          />\n          <Textarea\n                autoFocus\n                id=\"application_prompt\"\n                label=\"Here is the space for your amazing application.\"\n                required\n          />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Applies for the job. In order to change your application simply fill the form again.\">\n          Apply\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Iframe from 'react-iframe';\r\nimport Big from 'big.js';\r\nimport JobDetailAdminCommands from './JobDetailAdminCommands';\r\nimport ApplicationForm from './ApplicationForm';\r\n\r\nconst JobDetail = ({daoData, currentUser, onCancelJob, onStartJob, onApplyForJob}) => {\r\n  const { dao, job } = useParams();\r\n  const [ jobData, setJobData ] = useState();\r\n  const [ jobPayment, setJobPayment ] = useState();\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.find((j) => j.id === job);\r\n    let duration = parseInt(data.payment_cycle_in_s);\r\n    let seconds = duration%60;\r\n    let minutes = Math.floor((duration%(60*60))/60);\r\n    let hours = Math.floor((duration%(60*60*24))/(60*60));\r\n    let days = Math.floor(duration/(60*60*24));\r\n    duration = '';\r\n    if(days){\r\n      duration += ' ' + days + 'd';\r\n    }\r\n    if(hours){\r\n      duration += ' ' + hours + 'h';\r\n    }\r\n    if(minutes){\r\n      duration += ' ' + minutes + 'm';\r\n    }\r\n    if(seconds){\r\n      duration += ' ' + seconds + 's';\r\n    }\r\n    data.duration = duration;\r\n    setJobData(data);\r\n    setJobPayment(Big(data.payment).div(10 ** 24).toFixed(2))\r\n  }, [daoData, job]);\r\n\r\n  if(!jobData){\r\n    return <>\r\n              <header>\r\n                <h1>{job}'s Details</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{jobData.name}'s Details</h1>\r\n                 </header>\r\n                 <div className='flex flex-row-wrap justify-between margin-row-small'>\r\n                   {currentUser.accountId === dao ? <JobDetailAdminCommands jobData={jobData} onCancelJob={onCancelJob} onStartJob={onStartJob}/> : null}\r\n                 </div>\r\n                 <div className='flex flex-row-wrap justify-between'>\r\n                    <div className=\"details-view flex flex-col flex-grow medium-margin-right\">\r\n                      <div className='margin-row-small text-bigger preserve-newline'>\r\n                        {jobData.description}\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Status:</div>\r\n                        <div>{jobData.state}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Total Payment:</div>\r\n                        <div>{jobPayment} Ⓝ</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Contract Duration:</div>\r\n                        <div>{jobData.duration}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Applications:</div>\r\n                        <div>{jobData.applicants.length}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Contracted:</div>\r\n                        <div>{jobData.contracted}</div>\r\n                      </div>\r\n                    </div>\r\n                    {jobData.payment_stream_id \r\n                      ? <div>\r\n                          <Iframe url={\"https://test.app.roke.to/#/streams/\"+jobData.payment_stream_id}\r\n                                  position=\"relative\"\r\n                                  overflow=\"hidden\"\r\n                                  className='roketo-iframe'/>\r\n                        </div>\r\n                      : null}\r\n                 </div>\r\n                 {(dao !== currentUser.accountId && jobData.state === 'Open') ? <div className=\"margin-row-big\"><ApplicationForm onApplyForJob={onApplyForJob} jobId={jobData.id}/></div> : null}\r\n          </>\r\n}\r\n\r\nexport default JobDetail;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MembersOverview = () => {\r\n  const { dao } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{dao}'s Members</h1>\r\n                 </header>\r\n                 <p>\r\n                    Members here.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default MembersOverview;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Iframe from 'react-iframe';\r\n\r\nconst TasksOverview = ({daoData, loaded}) => {\r\n  const { dao } = useParams();\r\n\r\n  if(!loaded){\r\n    return <>\r\n              <header>\r\n                  <h1>{dao} Dashboard</h1>\r\n              </header>\r\n              <p>\r\n                  Loading...\r\n              </p>\r\n            </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{daoData.name}'s Tasks Board</h1>\r\n                 </header>\r\n                 <div>\r\n                    <Iframe url={\"https://trello.com/b/Ywm3W9HB.html\"}\r\n                            position=\"relative\"\r\n                            overflow=\"hidden\"\r\n                            className='task-iframe'/>\r\n                  </div>\r\n          </>\r\n}\r\n\r\nexport default TasksOverview;","import React, {useEffect, useState} from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport ArrowBackOutlinedIcon from '@mui/icons-material/ArrowBackOutlined';\r\nimport { Button } from 'react-materialize';\r\n\r\nconst ApplicationOverview = ({daoData}) => {\r\n  const { job } = useParams();\r\n  const [ applications, setApplications ] = useState();\r\n  const [ jobName, setJobName ] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.find((j) => j.id === job);\r\n    setApplications(splitArrayIntoChunksOfLen(data.applicants,2));\r\n    setJobName(data.name);\r\n  }, [daoData, job]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  const goBack = () => {\r\n      navigate(-1);\r\n  }\r\n\r\n  const copyApplicant = async (applicant) => {\r\n    await navigator.clipboard.writeText(applicant);\r\n  }\r\n\r\n  if(!applications){\r\n    return <>\r\n              <header>\r\n                <h1>{job}'s Applications</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{jobName}'s Applications</h1>\r\n                 </header>\r\n                 <div className='flex flex-row-wrap justify-between margin-row-small'>\r\n                    <Button large \r\n                            onClick={goBack}>\r\n                        <div className='flex flex-row'>\r\n                          <div className='min-margin-right'><ArrowBackOutlinedIcon className='btn-icon'/></div>\r\n                          <div>Back</div>\r\n                        </div>\r\n                    </Button>\r\n                 </div>\r\n                 {applications.length > 0\r\n                 ? applications.map(chunk =>\r\n                  <div className=\"row\">\r\n                    {chunk.map(application => \r\n                      <div className=\"col s6\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-title flex flex-row\">\r\n                              <div className='min-margin-right'>{application.applicant}</div>\r\n                              <div className='bm-item menu-item'\r\n                                   onClick={() => copyApplicant(application.applicant)}>\r\n                                     <ContentCopyOutlinedIcon className='btn-icon'/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                              <p className='preserve-newline'>{application.application}</p>\r\n                            </div>\r\n                          </div>\r\n                      </div>)}\r\n                  </div>)\r\n                 : <p>\r\n                      Currently there are no applications for the job. Come back later.\r\n                  </p>}\r\n          </>\r\n}\r\n\r\nexport default ApplicationOverview;","export default __webpack_public_path__ + \"static/media/404.6fa35088.jpg\";","import React from 'react'\r\nimport Image404 from '../images/404.jpg';\r\n\r\nclass NotFound extends React.Component {\r\n   render() {\r\n      return <img src={Image404} alt=\"Nothing is here.\" \r\n                  width='900'\r\n                  style={{margin:'10em'}}/>;\r\n   }\r\n}\r\nexport default NotFound;","import React, { useState, useEffect } from 'react';\nimport SignIn from './components/SignIn';\nimport Layout from './layout';\nimport DaoLayout from './dao-layout';\nimport CreateDao from './components/CreateDao';\nimport DaoDashboard from './components/DaoDashboard';\nimport JobsOverview from './components/JobsOverview';\nimport JobDetail from './components/JobDetail';\nimport MembersOverview from './components/MembersOverview';\nimport TasksOverview from './components/TasksOverview';\nimport ApplicationOverview from './components/ApplicationOverview';\nimport NotFound from './components/404.jsx';\nimport 'materialize-css/dist/css/materialize.css'\nimport './App.css';\nimport Big from 'big.js';\nimport { Route, Routes } from 'react-router-dom'\nvar version = require('../package.json').version;\nrequire('materialize-css');\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 14).toFixed();\n\nconst App = ({ contract, currentUser, nearConfig, wallet, provider, lastTransaction, error }) => {\n  const [message, setMessage] = useState('');\n  const [dao, setDao] = useState('');\n  const [daoData, setDaoData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  \n  useEffect(() => {\n      if (error){\n        setMessage(decodeURI(error));\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname + window.location.hash);\n      }\n      else if (lastTransaction && currentUser) {          \n        getState(lastTransaction, currentUser.accountId);\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname + window.location.hash);\n      }\n\n      async function getState(txHash, accountId) {\n        const result = await provider.txStatus(txHash, accountId);\n        //dao creation\n        let message = result.receipts_outcome[0].outcome.logs.pop();\n        if(!message){\n          //cancel job\n          message = result.receipts_outcome[3].outcome.logs.pop();\n        }\n        if(message){\n          setMessage(message);\n        }\n      }\n  }, [lastTransaction, error, currentUser, provider]);\n  \n  useEffect(() => {\n      async function fetchData() {\n        if(!dao){\n          return;\n        }\n        const result = await contract.get_dao(\n        {\n          dao_owner: dao\n        });\n        console.log(result);\n        setDaoData(result);\n        setLoaded(true);\n      }\n      \n      fetchData();\n  }, [contract, currentUser, dao]);\n\n  const onCancelJob = (jobId) => {\n      contract.cancel_job(\n        {\n          job_id: jobId\n        },\n        BOATLOAD_OF_GAS,\n        Big('1').times(10 ** 21).toFixed()\n      ).then((_) => {\n        console.log(\"Successfully canceled.\");\n      })\n  }\n\n  const onStartJob = (jobId, contracted) => {\n      contract.start_job(\n        {\n          job_id: jobId,\n          contracted: contracted\n        },\n        BOATLOAD_OF_GAS,\n        Big('1').times(10 ** 22).toFixed()\n      ).then((_) => {\n        console.log(\"Successfully started.\");\n      })\n  }\n\n  const onDaoCreation = (e) => {\n    e.preventDefault();\n\n    const { fieldset, name_prompt, description_prompt, icon_prompt } = e.target.elements;\n    \n    fieldset.disabled = true;\n\n    contract.create_dao(\n      {\n        dao_owner_id: currentUser.accountId,\n        name: name_prompt.value,\n        description: description_prompt.value,\n        icon: icon_prompt.value ?? ''\n      },\n      BOATLOAD_OF_GAS,\n      Big('1').times(10 ** 25).toFixed()\n    )\n  }\n\n  const onJobCreation = (e) => {\n    e.preventDefault();\n\n    const { fieldset, name_prompt, description_prompt, payment_prompt, duration_prompt } = e.target.elements;\n    const payment = Big(payment_prompt.value).times(10 ** 24).toFixed();\n    \n    fieldset.disabled = true;\n\n    contract.create_job_offering(\n      {\n        name: name_prompt.value,\n        description: description_prompt.value,\n        payment: payment,\n        payment_cycle_in_s: duration_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      payment\n    ).then((_) => {\n      console.log(\"Successfully created job.\");\n    })\n  }\n\n  const onApplyForJob = (e) => {\n    e.preventDefault();\n\n    const { fieldset, job_id, application_prompt } = e.target.elements;\n    \n    fieldset.disabled = true;\n    \n    contract.apply_for_job(\n      {\n        dao_owner: dao,\n        job_id: job_id.value,\n        application: application_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      0\n    ).then((_) => {\n      fieldset.disabled = false;\n      application_prompt.value = '';\n      application_prompt.focus();\n      setMessage('Successfully applied for the job.');\n    })\n  }\n  \n  const signIn = () => {\n    wallet.requestSignIn(\n      {contractId: nearConfig.contractName, methodNames: [contract.cancel_job.name, \n                                                          contract.start_job.name, \n                                                          contract.create_job_offering.name,\n                                                          contract.apply_for_job.name]}, //contract requesting access\n      'NEAR Challenge #8 - DAO Dashboard', //optional name\n      null, //optional URL to redirect to if the sign in was successful\n      null //optional URL to redirect to if the sign in was NOT successful\n    );\n  };\n\n  const signOut = () => {\n    wallet.signOut();\n    window.location.reload(false);\n  };\n\n  const clearMessage = () => {\n    setMessage('');\n  };\n\n  if(!currentUser){\n    return <SignIn signIn={signIn}/>;\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout currentUser={currentUser} signIn={signIn} signOut={signOut} clearMessage={clearMessage} message={message}/>}>\n        <Route index element={<CreateDao version={version} currentUser={currentUser} contract={contract} onDaoCreation={onDaoCreation}/>}/>\n        <Route path=\":dao\" element={<DaoLayout setDao={setDao}/>}>\n          <Route index element={<DaoDashboard daoData={daoData} loaded={loaded}/>}/>\n          <Route path=\"jobs\">\n            <Route index element={<JobsOverview daoData={daoData} loaded={loaded} onJobCreation={onJobCreation} currentUser={currentUser}/>}/>\n            <Route path=\":job\" element={<JobDetail daoData={daoData} currentUser={currentUser} onCancelJob={onCancelJob} onStartJob={onStartJob} onApplyForJob={onApplyForJob}/>}/>\n            {currentUser.accountId === dao\n              ? <Route path=\":job/applications\" element={<ApplicationOverview daoData={daoData}/>}/>\n              : null\n            }\n          </Route>\n          <Route path=\"tasks\">\n            <Route index element={<TasksOverview daoData={daoData} loaded={loaded}/>}/>\n          </Route>\n          <Route path=\"members\">\n            <Route index element={<MembersOverview version={version} nearConfig={nearConfig}/>}/>\n          </Route>\n          <Route path=\"*\" element={<NotFound/>}/>\n        </Route>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport getConfig from './config.js';\nimport * as nearAPI from 'near-api-js';\n\n// Initializing contract\nasync function initContract() {\n  \n  // get network configuration values from config.js\n  // based on the network ID we pass to getConfig()\n  const nearConfig = getConfig(process.env.NEAR_ENV || 'testnet');\n\n  // create a keyStore for signing transactions using the user's key\n  // which is located in the browser local storage after user logs in\n  const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n\n  // Initializing connection to the NEAR testnet\n  const near = await nearAPI.connect({ keyStore, ...nearConfig });\n\n  // Initialize wallet connection\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in user's account data\n  let currentUser;\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      // Gets the accountId as a string\n      accountId: walletConnection.getAccountId(),\n      // Gets the user's token balance\n      balance: (await walletConnection.account().state()).amount,\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(\n    // User's accountId as a string\n    walletConnection.account(),\n    // accountId of the contract we will be loading\n    // NOTE: All contracts on NEAR are deployed to an account and\n    // accounts can only have one contract deployed to them.\n    nearConfig.contractName,\n    {\n      // View methods are read-only – they don't modify the state, but usually return some value\n      viewMethods: ['get_dao', 'get_daos'],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: ['cancel_job', 'start_job', 'create_job_offering', 'apply_for_job', 'create_dao'],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.getAccountId(),\n    }\n  );\n  \n  const provider = near.connection.provider;\n  \n  return { contract, currentUser, nearConfig, walletConnection, provider };\n}\n\nwindow.nearInitPromise = initContract().then(\n  ({ contract, currentUser, nearConfig, walletConnection, provider }) => {\n    let urlParams = new URLSearchParams(window.location.search);\n    let lastTransaction;\n    if(urlParams.has('transactionHashes')){\n        lastTransaction = urlParams.get('transactionHashes');\n    }\n    let errorMessage;\n    if(urlParams.has('errorMessage')){\n        errorMessage = urlParams.get('errorMessage');\n    }\n    ReactDOM.render(\n\t  <Router>\n        <App\n          contract={contract}\n          currentUser={currentUser}\n          nearConfig={nearConfig}\n          wallet={walletConnection}\n          lastTransaction={lastTransaction}\n          provider={provider}\n          error={errorMessage}\n        />\n\t  </Router>,\n      document.getElementById('root')\n    );\n  }\n);\n\n"],"sourceRoot":""}