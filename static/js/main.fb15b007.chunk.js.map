{"version":3,"sources":["config.js","components/SignIn.jsx","components/Popup.jsx","layout.js","dao-layout.js","components/CreateDao.jsx","components/DaoDashboard.jsx","components/JobForm.jsx","components/JobsOverview.jsx","components/JobDetailAdminCommands.jsx","components/ApplicationForm.jsx","components/JobDetail.jsx","components/MembersOverview.jsx","components/MemberDetail.jsx","components/TasksOverview.jsx","components/TaskDetail.jsx","components/ApplicationOverview.jsx","images/404.jpg","components/404.jsx","App.js","index.js"],"names":["CONTRACT_NAME","process","module","exports","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error","SignIn","signIn","small","onClick","Popup","props","className","handleClose","content","Layout","currentUser","signOut","clearMessage","message","id","floating","large","icon","fontSize","tooltip","accountId","setDao","dao","useParams","useEffect","pageWrapId","outerContainerId","to","CreateDao","version","DaoDashboard","daoData","loading","useState","members","setMembers","tasks","setTasks","jobs","setJobs","length","Math","floor","random","name","description","JobForm","onJobCreation","onSubmit","autoComplete","autoFocus","label","required","defaultValue","min","step","type","JobsOverview","loaded","openJobs","setOpenJobs","runningJobs","setRunningJobs","canceledJobs","setCanceledJobs","splitArrayIntoChunksOfLen","filter","j","state","arr","len","chunks","i","n","push","slice","map","chunk","job","JobDetailAdminCommands","jobData","onCancelJob","onStartJob","contracted","setContracted","navigate","useNavigate","onChange","e","target","value","ApplicationForm","onApplyForJob","jobId","inputClassName","JobDetail","setJobData","jobPayment","setJobPayment","data","find","duration","parseInt","payment_cycle_in_s","seconds","minutes","hours","days","Big","payment","div","toFixed","applicants","payment_stream_id","url","position","overflow","MembersOverview","MemberDetail","member","TasksOverview","TaskDetail","task","ApplicationOverview","applications","setApplications","jobName","setJobName","copyApplicant","applicant","a","navigator","clipboard","writeText","application","NotFound","src","Image404","alt","width","style","margin","React","Component","require","BOATLOAD_OF_GAS","times","App","contract","nearConfig","wallet","provider","lastTransaction","error","setMessage","setDaoData","setLoaded","txHash","txStatus","result","receipts_outcome","outcome","logs","pop","decodeURI","window","history","pushState","location","origin","pathname","hash","getState","get_dao","dao_owner","console","log","fetchData","requestSignIn","contractId","methodNames","cancel_job","start_job","create_job_offering","apply_for_job","path","element","index","preventDefault","elements","fieldset","name_prompt","description_prompt","payment_prompt","duration_prompt","disabled","then","_","job_id","application_prompt","getConfig","NEAR_ENV","keyStore","nearAPI","BrowserLocalStorageKeyStore","near","walletConnection","getAccountId","account","amount","balance","viewMethods","changeMethods","sender","connection","nearInitPromise","initContract","errorMessage","urlParams","URLSearchParams","search","has","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb15b007.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'dao-dashboard.cryptosketches.testnet';\n\nfunction getConfig(env) {\n  switch(env) {\n    case 'production':\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org'\n      };\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org'\n      };\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org'\n      };\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME,\n      };\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    default:\n      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n  }\n}\n\nmodule.exports = getConfig;\n","import React from 'react';\nimport { Button } from 'react-materialize';\n\nexport default function SignIn({signIn}) {\n  return (\n    <>\n      <header>\n                   <h1>Kawaii Zoo Homepage</h1>\n      </header>\n      <Button small onClick={signIn}>Log in</Button>\n      <p>\n          This app was developed for the NEAR Spring hackathon. \n          In order to use the app you need to sign in with your NEAR wallet.\n      </p>\n    </>\n  );\n}\n","import React from \"react\";\r\n\r\nconst Popup = props => {\r\n  return (\r\n    <div className=\"popup-box\">\r\n      <div className=\"box\">\r\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;","import React from 'react';\r\nimport { Outlet } from 'react-router-dom'\r\nimport { Button } from 'react-materialize';\r\nimport PropTypes from 'prop-types';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport BrokenImageIcon from '@mui/icons-material/BrokenImage';\r\nimport Popup from './components/Popup';\r\n\r\nconst Layout = ({currentUser, signIn, signOut, clearMessage, message}) => {\r\n  return (\r\n    <>\r\n      <div id=\"App\">\r\n          <Outlet/>\r\n          { currentUser\r\n            ? <Button onClick={signOut} floating large className='btn-login' icon={<AccountBalanceWalletIcon fontSize=\"large\" className=\"btn-icon\" />} tooltip={'Log out ' + currentUser.accountId + '.'} />\r\n            : <Button onClick={signIn} floating large className='btn-login' icon={<BrokenImageIcon fontSize=\"large\" className=\"btn-icon\" />} tooltip='Log in using NEAR wallet.' />\r\n          }        \r\n          {message && <Popup\r\n            content={<>\r\n              <b>A message for you</b>\r\n              <p>{message}</p>\r\n            </>}\r\n            handleClose={clearMessage}\r\n          />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  currentUser: PropTypes.shape({\r\n    accountId: PropTypes.string.isRequired,\r\n    balance: PropTypes.string.isRequired\r\n  }),\r\n  signIn: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Layout;","import React, {useEffect} from 'react';\r\nimport { Link, Outlet, useParams } from 'react-router-dom'\r\nimport { slide as Menu } from 'react-burger-menu';\r\n\r\nconst Layout = ({setDao}) => {\r\n  const { dao } = useParams();\r\n  useEffect(() => {\r\n    setDao(dao);\r\n  }, [dao, setDao]);\r\n\r\n  return (\r\n    <>\r\n      <Menu pageWrapId={ \"page-wrapper\" } outerContainerId={ \"App\" }>\r\n        <Link className=\"menu-item\" to=\"\">\r\n          Dao Dashboard\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"jobs\">\r\n          Jobs\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"tasks\">\r\n          Tasks\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"members\">\r\n          Members\r\n        </Link>\r\n      </Menu>\r\n      \r\n      <main id=\"page-wrapper\">\r\n        <Outlet/>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\n\nexport default function CreateDao({version}) {\n  return (\n    <>\n      <main id=\"page-wrapper\">\n        <header>\n            <h1>NEAR Challenge #8 - DAO Dashboard - {version}</h1>\n        </header>\n        <p>\n            Create a new DAO or enter existing ones.\n        </p>\n      </main>\n    </>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\nimport TaskOutlinedIcon from '@mui/icons-material/TaskOutlined';\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\n\nexport default function DaoDashboard({daoData, loading}) {\n  const { dao } = useParams();\n  const [members, setMembers] = useState('');\n  const [tasks, setTasks] = useState('');\n  const [jobs, setJobs] = useState('');\n\n  useEffect(() => {\n    if(!daoData.jobs){\n      return;\n    }\n    \n    setJobs(daoData.jobs.length);\n    setTasks(Math.floor(Math.random() * 10));\n    setMembers(Math.floor(Math.random() * 100));\n  }, [daoData]);\n\n  if(loading){\n    <>\n      <header>\n          <h1>{dao} Dashboard</h1>\n      </header>\n      <p>\n          Loading...\n      </p>\n    </>\n  }\n\n  return (\n    <>\n      <header>\n          <h1>{daoData.name} Dashboard</h1>\n      </header>\n      <div className='flex flex-row justify-between'>\n        <Link className=\"bm-item menu-item flex-grow medium-margin-right\" to='members'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <PeopleAltOutlinedIcon className='icon-big'/>\n                  <p className='small'>Members</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{members}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n        <Link className=\"bm-item menu-item flex-grow medium-margin-right\" to='tasks'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <TaskOutlinedIcon className='icon-big'/>\n                  <p className='small'>Tasks</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{tasks}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n        <Link className=\"bm-item menu-item flex-grow\" to='jobs'>\n          <div className='card card-stats'>\n            <div className='card-body'>\n              <div className='row'>\n                <div className='col s5 text-center'>\n                  <WorkOutlineOutlinedIcon className='icon-big'/>\n                  <p className='small'>Jobs</p>\n                </div>\n                <div className='col s7 numbers'>\n                  <h5>{jobs}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Link>\n      </div>\n      <p className='bigger-font'>\n          {daoData.description}\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport { TextInput, Button } from 'react-materialize';\n\nexport default function JobForm({ onJobCreation }) {\n  return (\n    <form onSubmit={onJobCreation}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Create a new job offering</h5>\n          <p>Add all required parameter for the new job and hit the 'Create' button.</p>\n          <TextInput\n                  autoComplete=\"off\"\n                  autoFocus\n                  id=\"name_prompt\"\n                  label=\"The name of the job.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"description_prompt\"\n                  label=\"A detailed description of the job.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"payment_prompt\"\n                  defaultValue={'1'}\n                  min=\"0\"\n                  step=\"1\"\n                  type=\"number\"\n                  label=\"The payment for the job in Ⓝ.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"duration_prompt\"\n                  defaultValue={'172800'}\n                  min=\"1\"\n                  step=\"1\"\n                  type=\"number\"\n                  label=\"The duration for the job offer in s.\"\n                  required\n            />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Creates the job and deposits the chosen payment.\">\n          Create\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport JobForm from './JobForm';\r\n\r\nconst JobsOverview = ({daoData, loaded, currentUser, onJobCreation}) => {\r\n  const { dao } = useParams();\r\n  const [ openJobs, setOpenJobs ] = useState([]);\r\n  const [ runningJobs, setRunningJobs ] = useState([]);\r\n  const [ canceledJobs, setCanceledJobs ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n    setOpenJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'Open'), 3));\r\n    setRunningJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'InProgress'), 3));\r\n    setCanceledJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'Canceled'), 3));\r\n  }, [daoData]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  if(!loaded){\r\n    return <>\r\n              <header>\r\n                <h1>{dao}'s Jobs Board</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{daoData.name}'s Jobs Board</h1>\r\n                 </header>\r\n                  <h5>Open Jobs</h5>\r\n                  {daoData.jobs.length > 0\r\n                  ? openJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no open jobs available.\r\n                    </p>}\r\n                  <h5>Active Jobs</h5>\r\n                  {daoData.jobs.length > 0\r\n                  ? runningJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no active jobs.\r\n                    </p>}\r\n                  <h5>Canceled Jobs</h5>\r\n                  {daoData.jobs.length > 0\r\n                  ? canceledJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no canceled jobs.\r\n                    </p>}\r\n                  {(dao === currentUser.accountId) ? <JobForm onJobCreation={onJobCreation}/> : null}\r\n          </>\r\n}\r\n\r\nexport default JobsOverview;","import React, {useState} from 'react';\r\nimport { Button, TextInput } from 'react-materialize';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst JobDetailAdminCommands = ({jobData, onCancelJob, onStartJob}) => {\r\n    const [contracted, setContracted] = useState();\r\n    const navigate = useNavigate();\r\n\r\n    const changeContracted = e => {\r\n        setContracted(e.target.value);\r\n    }\r\n\r\n    const goToApplications = () => {\r\n        navigate(\"applications\");\r\n    }\r\n\r\n  if(!jobData){\r\n    return null\r\n  }\r\n\r\n  switch(jobData.state){\r\n      case 'InProgress':\r\n          return <>\r\n                    <Button large \r\n                            tooltip='Canceles the payment an the job offering. Important: A new job has to be created afterwards.' \r\n                            onClick={() => onCancelJob(jobData.id)}>\r\n                        Cancel Contract\r\n                    </Button>\r\n                 </>\r\n      case 'Open':\r\n          return <>\r\n                    <div className=\"flex flex-col flex-grow medium-margin-right\">\r\n                        <TextInput\r\n                            autoComplete=\"off\"\r\n                            label=\"NEAR account id of the contracted.\"\r\n                            onChange={changeContracted}\r\n                        />\r\n                    </div>\r\n                    <Button large \r\n                            tooltip='Assigns the contracted and starts the job immediately.' \r\n                            onClick={() => onStartJob(jobData.id, contracted)}\r\n                            className={contracted ?'medium-margin-right':'medium-margin-right disabled'}>\r\n                                Assign Contracted And Start\r\n                    </Button>\r\n                    <Button large \r\n                            onClick={goToApplications}>\r\n                                View Applications\r\n                    </Button>\r\n                 </>\r\n      default: return null;\r\n  }\r\n}\r\n\r\nexport default JobDetailAdminCommands;","import React from 'react';\nimport { TextInput, Button, Textarea } from 'react-materialize';\n\nexport default function ApplicationForm({ onApplyForJob, jobId }) {\n  return (\n    <form onSubmit={onApplyForJob}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Apply for the job</h5>\n          <p>Write your most inspiring application down below.</p>\n          <TextInput\n                autoComplete=\"off\"\n                id=\"job_id\"\n                label=\"The job ID. Do not change it!\"\n                required\n                inputClassName='disabled'\n                value={jobId}\n          />\n          <Textarea\n                autoFocus\n                id=\"application_prompt\"\n                label=\"Here is the space for your amazing application.\"\n                required\n          />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Applies for the job. In order to change your application simply fill the form again.\">\n          Apply\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Iframe from 'react-iframe';\r\nimport Big from 'big.js';\r\nimport JobDetailAdminCommands from './JobDetailAdminCommands';\r\nimport ApplicationForm from './ApplicationForm';\r\n\r\nconst JobDetail = ({daoData, currentUser, onCancelJob, onStartJob, onApplyForJob}) => {\r\n  const { dao, job } = useParams();\r\n  const [ jobData, setJobData ] = useState();\r\n  const [ jobPayment, setJobPayment ] = useState();\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.find((j) => j.id === job);\r\n    let duration = parseInt(data.payment_cycle_in_s);\r\n    let seconds = duration%60;\r\n    let minutes = Math.floor((duration%(60*60))/60);\r\n    let hours = Math.floor((duration%(60*60*24))/(60*60));\r\n    let days = Math.floor(duration/(60*60*24));\r\n    duration = '';\r\n    if(days){\r\n      duration += ' ' + days + 'd';\r\n    }\r\n    if(hours){\r\n      duration += ' ' + hours + 'h';\r\n    }\r\n    if(minutes){\r\n      duration += ' ' + minutes + 'm';\r\n    }\r\n    if(seconds){\r\n      duration += ' ' + seconds + 's';\r\n    }\r\n    data.duration = duration;\r\n    setJobData(data);\r\n    setJobPayment(Big(data.payment).div(10 ** 24).toFixed(2))\r\n  }, [daoData, job]);\r\n\r\n  if(!jobData){\r\n    return <>\r\n              <header>\r\n                <h1>{job}'s Details</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{jobData.name}'s Details</h1>\r\n                 </header>\r\n                 <div className='flex flex-row-wrap justify-between margin-row-small'>\r\n                   {currentUser.accountId === dao ? <JobDetailAdminCommands jobData={jobData} onCancelJob={onCancelJob} onStartJob={onStartJob}/> : null}\r\n                 </div>\r\n                 <div className='flex flex-row-wrap justify-between'>\r\n                    <div className=\"details-view flex flex-col flex-grow medium-margin-right\">\r\n                      <div className='margin-row-small text-bigger'>\r\n                        {jobData.description}\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Status:</div>\r\n                        <div>{jobData.state}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Total Payment:</div>\r\n                        <div>{jobPayment} Ⓝ</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Contract Duration:</div>\r\n                        <div>{jobData.duration}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Applications:</div>\r\n                        <div>{jobData.applicants.length}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Contracted:</div>\r\n                        <div>{jobData.contracted}</div>\r\n                      </div>\r\n                    </div>\r\n                    {jobData.payment_stream_id \r\n                      ? <div>\r\n                          <Iframe url={\"https://test.app.roke.to/#/streams/\"+jobData.payment_stream_id}\r\n                                  position=\"relative\"\r\n                                  overflow=\"hidden\"\r\n                                  className='roketo-iframe'/>\r\n                        </div>\r\n                      : null}\r\n                 </div>\r\n                 {(dao !== currentUser.accountId) ? <div className=\"margin-row-big\"><ApplicationForm onApplyForJob={onApplyForJob} jobId={jobData.id}/></div> : null}\r\n          </>\r\n}\r\n\r\nexport default JobDetail;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MembersOverview = () => {\r\n  const { dao } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{dao}'s Members</h1>\r\n                 </header>\r\n                 <p>\r\n                    Members here.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default MembersOverview;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MemberDetail = () => {\r\n  const { dao, member } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{member}'s Details</h1>\r\n                 </header>\r\n                 <p>\r\n                    Member {member} of {dao}.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default MemberDetail;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst TasksOverview = () => {\r\n  const { dao } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{dao}'s Tasks Board</h1>\r\n                 </header>\r\n                 <p>\r\n                    Tasks here.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default TasksOverview;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst TaskDetail = () => {\r\n  const { dao, task } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{task}'s Details</h1>\r\n                 </header>\r\n                 <p>\r\n                    Task {task} of {dao}.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default TaskDetail;","import React, {useEffect, useState} from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport ArrowBackOutlinedIcon from '@mui/icons-material/ArrowBackOutlined';\r\nimport { Button } from 'react-materialize';\r\n\r\nconst ApplicationOverview = ({daoData}) => {\r\n  const { job } = useParams();\r\n  const [ applications, setApplications ] = useState();\r\n  const [ jobName, setJobName ] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.find((j) => j.id === job);\r\n    setApplications(splitArrayIntoChunksOfLen(data.applicants,2));\r\n    setJobName(data.name);\r\n  }, [daoData, job]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  const goBack = () => {\r\n      navigate(-1);\r\n  }\r\n\r\n  const copyApplicant = async (applicant) => {\r\n    await navigator.clipboard.writeText(applicant);\r\n  }\r\n\r\n  if(!applications){\r\n    return <>\r\n              <header>\r\n                <h1>{job}'s Applications</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{jobName}'s Applications</h1>\r\n                 </header>\r\n                 <div className='flex flex-row-wrap justify-between margin-row-small'>\r\n                    <Button large \r\n                            onClick={goBack}>\r\n                        <div className='flex flex-row'>\r\n                          <div className='min-margin-right'><ArrowBackOutlinedIcon className='btn-icon'/></div>\r\n                          <div>Back</div>\r\n                        </div>\r\n                    </Button>\r\n                 </div>\r\n                 {applications.length > 0\r\n                 ? applications.map(chunk =>\r\n                  <div className=\"row\">\r\n                    {chunk.map(application => \r\n                      <div className=\"col s6\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-title flex flex-row\">\r\n                              <div className='min-margin-right'>{application.applicant}</div>\r\n                              <div className='bm-item menu-item'\r\n                                   onClick={() => copyApplicant(application.applicant)}>\r\n                                     <ContentCopyOutlinedIcon className='btn-icon'/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                              <p className='preserve-newline'>{application.application}</p>\r\n                            </div>\r\n                          </div>\r\n                      </div>)}\r\n                  </div>)\r\n                 : <p>\r\n                      Currently there are no applications for the job. Come back later.\r\n                  </p>}\r\n          </>\r\n}\r\n\r\nexport default ApplicationOverview;","export default __webpack_public_path__ + \"static/media/404.6fa35088.jpg\";","import React from 'react'\r\nimport Image404 from '../images/404.jpg';\r\n\r\nclass NotFound extends React.Component {\r\n   render() {\r\n      return <img src={Image404} alt=\"Nothing is here.\" \r\n                  width='900'\r\n                  style={{margin:'10em'}}/>;\r\n   }\r\n}\r\nexport default NotFound;","import React, { useState, useEffect } from 'react';\nimport SignIn from './components/SignIn';\nimport Layout from './layout';\nimport DaoLayout from './dao-layout';\nimport CreateDao from './components/CreateDao';\nimport DaoDashboard from './components/DaoDashboard';\nimport JobsOverview from './components/JobsOverview';\nimport JobDetail from './components/JobDetail';\nimport MembersOverview from './components/MembersOverview';\nimport MemberDetail from './components/MemberDetail';\nimport TasksOverview from './components/TasksOverview';\nimport TaskDetail from './components/TaskDetail';\nimport ApplicationOverview from './components/ApplicationOverview';\nimport NotFound from './components/404.jsx';\nimport 'materialize-css/dist/css/materialize.css'\nimport './App.css';\nimport Big from 'big.js';\nimport { Route, Routes } from 'react-router-dom'\nvar version = require('../package.json').version;\nrequire('materialize-css');\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 14).toFixed();\n\nconst App = ({ contract, currentUser, nearConfig, wallet, provider, lastTransaction, error }) => {\n  const [message, setMessage] = useState('');\n  const [dao, setDao] = useState('');\n  const [daoData, setDaoData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  \n  useEffect(() => {\n      if (error){\n        setMessage(decodeURI(error));\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname + window.location.hash);\n      }\n      else if (lastTransaction && currentUser) {          \n        getState(lastTransaction, currentUser.accountId);\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname + window.location.hash);\n      }\n\n      async function getState(txHash, accountId) {\n        const result = await provider.txStatus(txHash, accountId);\n        //dao creation\n        let message = result.receipts_outcome[0].outcome.logs.pop();\n        if(!message){\n          //cancel job\n          message = result.receipts_outcome[3].outcome.logs.pop();\n        }\n        if(message){\n          setMessage(message);\n        }\n      }\n  }, [lastTransaction, error, currentUser, provider]);\n  \n  useEffect(() => {\n      async function fetchData() {\n        if(!dao){\n          return;\n        }\n        const result = await contract.get_dao(\n        {\n          dao_owner: dao\n        });\n        console.log(result);\n        setDaoData(result);\n        setLoaded(true);\n      }\n      \n      fetchData();\n  }, [contract, currentUser, dao]);\n\n  const onCancelJob = (jobId) => {\n      contract.cancel_job(\n        {\n          job_id: jobId\n        },\n        BOATLOAD_OF_GAS,\n        Big('1').times(10 ** 21).toFixed()\n      ).then((_) => {\n        console.log(\"Successfully canceled.\");\n      })\n  }\n\n  const onStartJob = (jobId, contracted) => {\n      contract.start_job(\n        {\n          job_id: jobId,\n          contracted: contracted\n        },\n        BOATLOAD_OF_GAS,\n        Big('1').times(10 ** 22).toFixed()\n      ).then((_) => {\n        console.log(\"Successfully started.\");\n      })\n  }\n\n  const onJobCreation = (e) => {\n    e.preventDefault();\n\n    const { fieldset, name_prompt, description_prompt, payment_prompt, duration_prompt } = e.target.elements;\n    const payment = Big(payment_prompt.value).times(10 ** 24).toFixed();\n    \n    fieldset.disabled = true;\n\n    contract.create_job_offering(\n      {\n        name: name_prompt.value,\n        description: description_prompt.value,\n        payment: payment,\n        payment_cycle_in_s: duration_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      payment\n    ).then((_) => {\n      console.log(\"Successfully created job.\");\n    })\n  }\n\n  const onApplyForJob = (e) => {\n    e.preventDefault();\n\n    const { fieldset, job_id, application_prompt } = e.target.elements;\n    \n    fieldset.disabled = true;\n    \n    contract.apply_for_job(\n      {\n        dao_owner: dao,\n        job_id: job_id.value,\n        application: application_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      0\n    ).then((_) => {\n      console.log(\"Successfully added application.\");\n    })\n  }\n  \n  const signIn = () => {\n    wallet.requestSignIn(\n      {contractId: nearConfig.contractName, methodNames: [contract.cancel_job.name, \n                                                          contract.start_job.name, \n                                                          contract.create_job_offering.name,\n                                                          contract.apply_for_job.name]}, //contract requesting access\n      'NEAR Challenge #8 - DAO Dashboard', //optional name\n      null, //optional URL to redirect to if the sign in was successful\n      null //optional URL to redirect to if the sign in was NOT successful\n    );\n  };\n\n  const signOut = () => {\n    wallet.signOut();\n  };\n\n  const clearMessage = () => {\n    setMessage('');\n  };\n\n  if(!currentUser){\n    return <SignIn signIn={signIn}/>;\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout currentUser={currentUser} signIn={signIn} signOut={signOut} clearMessage={clearMessage} message={message}/>}>\n        <Route index element={<CreateDao version={version}/>}/>\n        <Route path=\":dao\" element={<DaoLayout setDao={setDao}/>}>\n          <Route index element={<DaoDashboard daoData={daoData} loaded={loaded}/>}/>\n          <Route path=\"jobs\">\n            <Route index element={<JobsOverview daoData={daoData} loaded={loaded} onJobCreation={onJobCreation} currentUser={currentUser}/>}/>\n            <Route path=\":job\" element={<JobDetail daoData={daoData} currentUser={currentUser} onCancelJob={onCancelJob} onStartJob={onStartJob} onApplyForJob={onApplyForJob}/>}/>\n            {currentUser.accountId === dao\n              ? <Route path=\":job/applications\" element={<ApplicationOverview daoData={daoData}/>}/>\n              : null\n            }\n          </Route>\n          <Route path=\"tasks\">\n            <Route index element={<TasksOverview/>}/>\n            <Route path=\":task\" element={<TaskDetail/>}/>\n          </Route>\n          <Route path=\"members\">\n            <Route index element={<MembersOverview version={version} nearConfig={nearConfig}/>}/>\n            <Route path=\":member\" element={<MemberDetail/>}/>\n          </Route>\n          <Route path=\"*\" element={<NotFound/>}/>\n        </Route>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport getConfig from './config.js';\nimport * as nearAPI from 'near-api-js';\n\n// Initializing contract\nasync function initContract() {\n  \n  // get network configuration values from config.js\n  // based on the network ID we pass to getConfig()\n  const nearConfig = getConfig(process.env.NEAR_ENV || 'testnet');\n\n  // create a keyStore for signing transactions using the user's key\n  // which is located in the browser local storage after user logs in\n  const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n\n  // Initializing connection to the NEAR testnet\n  const near = await nearAPI.connect({ keyStore, ...nearConfig });\n\n  // Initialize wallet connection\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in user's account data\n  let currentUser;\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      // Gets the accountId as a string\n      accountId: walletConnection.getAccountId(),\n      // Gets the user's token balance\n      balance: (await walletConnection.account().state()).amount,\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(\n    // User's accountId as a string\n    walletConnection.account(),\n    // accountId of the contract we will be loading\n    // NOTE: All contracts on NEAR are deployed to an account and\n    // accounts can only have one contract deployed to them.\n    nearConfig.contractName,\n    {\n      // View methods are read-only – they don't modify the state, but usually return some value\n      viewMethods: ['get_dao'],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: ['cancel_job', 'start_job', 'create_job_offering', 'apply_for_job'],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.getAccountId(),\n    }\n  );\n  \n  const provider = near.connection.provider;\n  \n  return { contract, currentUser, nearConfig, walletConnection, provider };\n}\n\nwindow.nearInitPromise = initContract().then(\n  ({ contract, currentUser, nearConfig, walletConnection, provider }) => {\n    let urlParams = new URLSearchParams(window.location.search);\n    let lastTransaction;\n    if(urlParams.has('transactionHashes')){\n        lastTransaction = urlParams.get('transactionHashes');\n    }\n    let errorMessage;\n    if(urlParams.has('errorMessage')){\n        errorMessage = urlParams.get('errorMessage');\n    }\n    ReactDOM.render(\n\t  <Router>\n        <App\n          contract={contract}\n          currentUser={currentUser}\n          nearConfig={nearConfig}\n          wallet={walletConnection}\n          lastTransaction={lastTransaction}\n          provider={provider}\n          error={errorMessage}\n        />\n\t  </Router>,\n      document.getElementById('root')\n    );\n  }\n);\n\n"],"sourceRoot":""}