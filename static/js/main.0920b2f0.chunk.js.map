{"version":3,"sources":["config.js","components/SignIn.jsx","components/Popup.jsx","layout.js","dao-layout.js","components/CreateDao.jsx","components/DaoDashboard.jsx","components/JobForm.jsx","components/JobsOverview.jsx","components/JobDetailAdminCommands.jsx","components/ApplicationForm.jsx","components/JobDetail.jsx","components/MembersOverview.jsx","components/MemberDetail.jsx","components/TasksOverview.jsx","components/TaskDetail.jsx","components/ApplicationOverview.jsx","images/404.jpg","components/404.jsx","App.js","index.js"],"names":["CONTRACT_NAME","process","module","exports","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error","SignIn","signIn","small","onClick","Popup","props","className","handleClose","content","Layout","currentUser","signOut","clearMessage","message","id","floating","large","icon","fontSize","tooltip","accountId","setDao","dao","useParams","useEffect","pageWrapId","outerContainerId","to","CreateDao","version","DaoDashboard","JobForm","onJobCreation","onSubmit","autoComplete","autoFocus","label","required","defaultValue","min","step","type","JobsOverview","daoData","loaded","useState","openJobs","setOpenJobs","runningJobs","setRunningJobs","canceledJobs","setCanceledJobs","jobs","splitArrayIntoChunksOfLen","filter","j","state","arr","len","chunks","i","n","length","push","slice","name","map","chunk","job","description","JobDetailAdminCommands","jobData","onCancelJob","onStartJob","contracted","setContracted","navigate","useNavigate","onChange","e","target","value","ApplicationForm","onApplyForJob","jobId","inputClassName","JobDetail","setJobData","jobPayment","setJobPayment","data","find","duration","parseInt","payment_cycle_in_s","seconds","minutes","Math","floor","hours","days","Big","payment","div","toFixed","applicants","payment_stream_id","url","position","overflow","MembersOverview","MemberDetail","member","TasksOverview","TaskDetail","task","ApplicationOverview","applications","setApplications","jobName","setJobName","copyApplicant","applicant","a","navigator","clipboard","writeText","application","NotFound","src","Image404","alt","width","style","margin","React","Component","require","BOATLOAD_OF_GAS","times","App","contract","nearConfig","wallet","provider","lastTransaction","error","setMessage","setDaoData","setLoaded","txHash","txStatus","result","receipts_outcome","outcome","logs","pop","decodeURI","window","history","pushState","location","origin","pathname","hash","getState","get_dao","dao_owner","console","log","fetchData","requestSignIn","contractId","methodNames","cancel_job","start_job","create_job_offering","apply_for_job","path","element","index","preventDefault","elements","fieldset","name_prompt","description_prompt","payment_prompt","duration_prompt","disabled","then","_","job_id","application_prompt","getConfig","NEAR_ENV","keyStore","nearAPI","BrowserLocalStorageKeyStore","near","walletConnection","getAccountId","account","amount","balance","viewMethods","changeMethods","sender","connection","nearInitPromise","initContract","errorMessage","urlParams","URLSearchParams","search","has","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0920b2f0.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'dao-dashboard.cryptosketches.testnet';\n\nfunction getConfig(env) {\n  switch(env) {\n    case 'production':\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org'\n      };\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org'\n      };\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org'\n      };\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME,\n      };\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    default:\n      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n  }\n}\n\nmodule.exports = getConfig;\n","import React from 'react';\nimport { Button } from 'react-materialize';\n\nexport default function SignIn({signIn}) {\n  return (\n    <>\n      <header>\n                   <h1>Kawaii Zoo Homepage</h1>\n      </header>\n      <Button small onClick={signIn}>Log in</Button>\n      <p>\n          This app was developed for the NEAR Spring hackathon. \n          In order to use the app you need to sign in with your NEAR wallet.\n      </p>\n    </>\n  );\n}\n","import React from \"react\";\r\n\r\nconst Popup = props => {\r\n  return (\r\n    <div className=\"popup-box\">\r\n      <div className=\"box\">\r\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;","import React from 'react';\r\nimport { Outlet } from 'react-router-dom'\r\nimport { Button } from 'react-materialize';\r\nimport PropTypes from 'prop-types';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport BrokenImageIcon from '@mui/icons-material/BrokenImage';\r\nimport Popup from './components/Popup';\r\n\r\nconst Layout = ({currentUser, signIn, signOut, clearMessage, message}) => {\r\n  return (\r\n    <>\r\n      <div id=\"App\">\r\n          <Outlet/>\r\n          { currentUser\r\n            ? <Button onClick={signOut} floating large className='btn-login' icon={<AccountBalanceWalletIcon fontSize=\"large\" className=\"btn-icon\" />} tooltip={'Log out ' + currentUser.accountId + '.'} />\r\n            : <Button onClick={signIn} floating large className='btn-login' icon={<BrokenImageIcon fontSize=\"large\" className=\"btn-icon\" />} tooltip='Log in using NEAR wallet.' />\r\n          }        \r\n          {message && <Popup\r\n            content={<>\r\n              <b>A message for you</b>\r\n              <p>{message}</p>\r\n            </>}\r\n            handleClose={clearMessage}\r\n          />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  currentUser: PropTypes.shape({\r\n    accountId: PropTypes.string.isRequired,\r\n    balance: PropTypes.string.isRequired\r\n  }),\r\n  signIn: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Layout;","import React, {useEffect} from 'react';\r\nimport { Link, Outlet, useParams } from 'react-router-dom'\r\nimport { slide as Menu } from 'react-burger-menu';\r\n\r\nconst Layout = ({setDao}) => {\r\n  const { dao } = useParams();\r\n  useEffect(() => {\r\n    setDao(dao);\r\n  }, [dao, setDao]);\r\n\r\n  return (\r\n    <>\r\n      <Menu pageWrapId={ \"page-wrapper\" } outerContainerId={ \"App\" }>\r\n        <Link className=\"menu-item\" to=\"\">\r\n          Dao Dashboard\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"jobs\">\r\n          Jobs\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"tasks\">\r\n          Tasks\r\n        </Link>\r\n\r\n        <Link className=\"menu-item\" to=\"members\">\r\n          Members\r\n        </Link>\r\n      </Menu>\r\n      \r\n      <main id=\"page-wrapper\">\r\n        <Outlet/>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\n\nexport default function CreateDao({version}) {\n  return (\n    <>\n      <main id=\"page-wrapper\">\n        <header>\n            <h1>NEAR Challenge #8 - DAO Dashboard - {version}</h1>\n        </header>\n        <p>\n            Create a new DAO or enter existing ones.\n        </p>\n      </main>\n    </>\n  );\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function DaoDashboard({version}) {\n  const { dao } = useParams();\n\n  return (\n    <>\n      <header>\n          <h1>NEAR Challenge #8 - DAO Dashboard - {version}</h1>\n      </header>\n      <p>\n          Dashboard for {dao}.\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport { TextInput, Button } from 'react-materialize';\n\nexport default function JobForm({ onJobCreation }) {\n  return (\n    <form onSubmit={onJobCreation}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Create a new job offering</h5>\n          <p>Add all required parameter for the new job and hit the 'Create' button.</p>\n          <TextInput\n                  autoComplete=\"off\"\n                  autoFocus\n                  id=\"name_prompt\"\n                  label=\"The name of the job.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"description_prompt\"\n                  label=\"A detailed description of the job.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"payment_prompt\"\n                  defaultValue={'1'}\n                  min=\"0\"\n                  step=\"1\"\n                  type=\"number\"\n                  label=\"The payment for the job in Ⓝ.\"\n                  required\n            />\n            <TextInput\n                  autoComplete=\"off\"\n                  id=\"duration_prompt\"\n                  defaultValue={'172800'}\n                  min=\"1\"\n                  step=\"1\"\n                  type=\"number\"\n                  label=\"The duration for the job offer in s.\"\n                  required\n            />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Creates the job and deposits the chosen payment.\">\n          Create\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport JobForm from './JobForm';\r\n\r\nconst JobsOverview = ({daoData, loaded, currentUser, onJobCreation}) => {\r\n  const { dao } = useParams();\r\n  const [ openJobs, setOpenJobs ] = useState([]);\r\n  const [ runningJobs, setRunningJobs ] = useState([]);\r\n  const [ canceledJobs, setCanceledJobs ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n    setOpenJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'Open'), 3));\r\n    setRunningJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'InProgress'), 3));\r\n    setCanceledJobs(splitArrayIntoChunksOfLen(daoData.jobs.filter((j) => j.state === 'Canceled'), 3));\r\n  }, [daoData]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  if(!loaded){\r\n    return <>\r\n              <header>\r\n                <h1>{dao}'s Jobs Board</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{daoData.name}'s Jobs Board</h1>\r\n                 </header>\r\n                  <h5>Open Jobs</h5>\r\n                  {daoData.jobs.length > 0\r\n                  ? openJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no open jobs available.\r\n                    </p>}\r\n                  <h5>Active Jobs</h5>\r\n                  {daoData.jobs.length > 0\r\n                  ? runningJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no active jobs.\r\n                    </p>}\r\n                  <h5>Canceled Jobs</h5>\r\n                  {daoData.jobs.length > 0\r\n                  ? canceledJobs.map(chunk =>\r\n                    <div className=\"row\">\r\n                      {chunk.map(job => \r\n                        <div className=\"col s4\">\r\n                          <Link className=\"bm-item menu-item\" to={job.id}>\r\n                            <div className=\"card\">\r\n                              <div className=\"card-title\">{job.name}</div>\r\n                              <div className=\"card-content\">\r\n                                <p>{job.description}</p>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>)}\r\n                    </div>)\r\n                  : <p>\r\n                        Currently there are no canceled jobs.\r\n                    </p>}\r\n                  {(dao === currentUser.accountId) ? <JobForm onJobCreation={onJobCreation}/> : null}\r\n          </>\r\n}\r\n\r\nexport default JobsOverview;","import React, {useState} from 'react';\r\nimport { Button, TextInput } from 'react-materialize';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst JobDetailAdminCommands = ({jobData, onCancelJob, onStartJob}) => {\r\n    const [contracted, setContracted] = useState();\r\n    const navigate = useNavigate();\r\n\r\n    const changeContracted = e => {\r\n        setContracted(e.target.value);\r\n    }\r\n\r\n    const goToApplications = () => {\r\n        navigate(\"applications\");\r\n    }\r\n\r\n  if(!jobData){\r\n    return null\r\n  }\r\n\r\n  switch(jobData.state){\r\n      case 'InProgress':\r\n          return <>\r\n                    <Button large \r\n                            tooltip='Canceles the payment an the job offering. Important: A new job has to be created afterwards.' \r\n                            onClick={() => onCancelJob(jobData.id)}>\r\n                        Cancel Contract\r\n                    </Button>\r\n                 </>\r\n      case 'Open':\r\n          return <>\r\n                    <div className=\"flex flex-col flex-grow medium-margin-right\">\r\n                        <TextInput\r\n                            autoComplete=\"off\"\r\n                            label=\"NEAR account id of the contracted.\"\r\n                            onChange={changeContracted}\r\n                        />\r\n                    </div>\r\n                    <Button large \r\n                            tooltip='Assigns the contracted and starts the job immediately.' \r\n                            onClick={() => onStartJob(jobData.id, contracted)}\r\n                            className={contracted ?'medium-margin-right':'medium-margin-right disabled'}>\r\n                                Assign Contracted And Start\r\n                    </Button>\r\n                    <Button large \r\n                            onClick={goToApplications}>\r\n                                View Applications\r\n                    </Button>\r\n                 </>\r\n      default: return null;\r\n  }\r\n}\r\n\r\nexport default JobDetailAdminCommands;","import React from 'react';\nimport { TextInput, Button, Textarea } from 'react-materialize';\n\nexport default function ApplicationForm({ onApplyForJob, jobId }) {\n  return (\n    <form onSubmit={onApplyForJob}>\n      <fieldset id=\"fieldset\" className='flex flex-col details-view flex-grow'>\n        <div className=\"highlight flex flex-col\">\n          <h5>Apply for the job</h5>\n          <p>Write your most inspiring application down below.</p>\n          <TextInput\n                autoComplete=\"off\"\n                id=\"job_id\"\n                label=\"The job ID. Do not change it!\"\n                required\n                inputClassName='disabled'\n                value={jobId}\n          />\n          <Textarea\n                autoFocus\n                id=\"application_prompt\"\n                label=\"Here is the space for your amazing application.\"\n                required\n          />\n        </div>\n        <Button type=\"submit\" small\n                tooltip=\"Applies for the job. In order to change your application simply fill the form again.\">\n          Apply\n        </Button>\n      </fieldset>\n    </form>\n  );\n}","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Iframe from 'react-iframe';\r\nimport Big from 'big.js';\r\nimport JobDetailAdminCommands from './JobDetailAdminCommands';\r\nimport ApplicationForm from './ApplicationForm';\r\n\r\nconst JobDetail = ({daoData, currentUser, onCancelJob, onStartJob, onApplyForJob}) => {\r\n  const { dao, job } = useParams();\r\n  const [ jobData, setJobData ] = useState();\r\n  const [ jobPayment, setJobPayment ] = useState();\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.find((j) => j.id === job);\r\n    let duration = parseInt(data.payment_cycle_in_s);\r\n    let seconds = duration%60;\r\n    let minutes = Math.floor((duration%(60*60))/60);\r\n    let hours = Math.floor((duration%(60*60*24))/(60*60));\r\n    let days = Math.floor(duration/(60*60*24));\r\n    duration = '';\r\n    if(days){\r\n      duration += ' ' + days + 'd';\r\n    }\r\n    if(hours){\r\n      duration += ' ' + hours + 'h';\r\n    }\r\n    if(minutes){\r\n      duration += ' ' + minutes + 'm';\r\n    }\r\n    if(seconds){\r\n      duration += ' ' + seconds + 's';\r\n    }\r\n    data.duration = duration;\r\n    setJobData(data);\r\n    setJobPayment(Big(data.payment).div(10 ** 24).toFixed(2))\r\n  }, [daoData, job]);\r\n\r\n  if(!jobData){\r\n    return <>\r\n              <header>\r\n                <h1>{job}'s Details</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{jobData.name}'s Details</h1>\r\n                 </header>\r\n                 <div className='flex flex-row-wrap justify-between margin-row-small'>\r\n                   {currentUser.accountId === dao ? <JobDetailAdminCommands jobData={jobData} onCancelJob={onCancelJob} onStartJob={onStartJob}/> : null}\r\n                 </div>\r\n                 <div className='flex flex-row-wrap justify-between'>\r\n                    <div className=\"details-view flex flex-col flex-grow medium-margin-right\">\r\n                      <div className='margin-row-small text-bigger'>\r\n                        {jobData.description}\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Status:</div>\r\n                        <div>{jobData.state}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Total Payment:</div>\r\n                        <div>{jobPayment} Ⓝ</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Contract Duration:</div>\r\n                        <div>{jobData.duration}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Applications:</div>\r\n                        <div>{jobData.applicants.length}</div>\r\n                      </div>\r\n                      <div className='flex justify-between margin-row-small'>\r\n                        <div className='text-unimportant min-margin-right'>Contracted:</div>\r\n                        <div>{jobData.contracted}</div>\r\n                      </div>\r\n                    </div>\r\n                    {jobData.payment_stream_id \r\n                      ? <div>\r\n                          <Iframe url={\"https://test.app.roke.to/#/streams/\"+jobData.payment_stream_id}\r\n                                  position=\"relative\"\r\n                                  overflow=\"hidden\"\r\n                                  className='roketo-iframe'/>\r\n                        </div>\r\n                      : null}\r\n                 </div>\r\n                 {(dao !== currentUser.accountId) ? <div className=\"margin-row-big\"><ApplicationForm onApplyForJob={onApplyForJob} jobId={jobData.id}/></div> : null}\r\n          </>\r\n}\r\n\r\nexport default JobDetail;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MembersOverview = () => {\r\n  const { dao } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{dao}'s Members</h1>\r\n                 </header>\r\n                 <p>\r\n                    Members here.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default MembersOverview;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MemberDetail = () => {\r\n  const { dao, member } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{member}'s Details</h1>\r\n                 </header>\r\n                 <p>\r\n                    Member {member} of {dao}.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default MemberDetail;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst TasksOverview = () => {\r\n  const { dao } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{dao}'s Tasks Board</h1>\r\n                 </header>\r\n                 <p>\r\n                    Tasks here.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default TasksOverview;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst TaskDetail = () => {\r\n  const { dao, task } = useParams();\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{task}'s Details</h1>\r\n                 </header>\r\n                 <p>\r\n                    Task {task} of {dao}.\r\n                 </p>\r\n          </>\r\n}\r\n\r\nexport default TaskDetail;","import React, {useEffect, useState} from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport ArrowBackOutlinedIcon from '@mui/icons-material/ArrowBackOutlined';\r\nimport { Button } from 'react-materialize';\r\n\r\nconst ApplicationOverview = ({daoData}) => {\r\n  const { job } = useParams();\r\n  const [ applications, setApplications ] = useState();\r\n  const [ jobName, setJobName ] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if(!daoData.jobs){\r\n      return;\r\n    }\r\n\r\n    let data = daoData.jobs.find((j) => j.id === job);\r\n    setApplications(splitArrayIntoChunksOfLen(data.applicants,2));\r\n    setJobName(data.name);\r\n  }, [daoData, job]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  const goBack = () => {\r\n      navigate(-1);\r\n  }\r\n\r\n  const copyApplicant = async (applicant) => {\r\n    await navigator.clipboard.writeText(applicant);\r\n  }\r\n\r\n  if(!applications){\r\n    return <>\r\n              <header>\r\n                <h1>{job}'s Applications</h1>\r\n              </header>\r\n              <h1>Loading...</h1>\r\n          </>\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>{jobName}'s Applications</h1>\r\n                 </header>\r\n                 <div className='flex flex-row-wrap justify-between margin-row-small'>\r\n                    <Button large \r\n                            onClick={goBack}>\r\n                        <div className='flex flex-row'>\r\n                          <div className='min-margin-right'><ArrowBackOutlinedIcon className='btn-icon'/></div>\r\n                          <div>Back</div>\r\n                        </div>\r\n                    </Button>\r\n                 </div>\r\n                 {applications.length > 0\r\n                 ? applications.map(chunk =>\r\n                  <div className=\"row\">\r\n                    {chunk.map(application => \r\n                      <div className=\"col s6\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-title flex flex-row\">\r\n                              <div className='min-margin-right'>{application.applicant}</div>\r\n                              <div className='bm-item menu-item'\r\n                                   onClick={() => copyApplicant(application.applicant)}>\r\n                                     <ContentCopyOutlinedIcon className='btn-icon'/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                              <p className='preserve-newline'>{application.application}</p>\r\n                            </div>\r\n                          </div>\r\n                      </div>)}\r\n                  </div>)\r\n                 : <p>\r\n                      Currently there are no applications for the job. Come back later.\r\n                  </p>}\r\n          </>\r\n}\r\n\r\nexport default ApplicationOverview;","export default __webpack_public_path__ + \"static/media/404.6fa35088.jpg\";","import React from 'react'\r\nimport Image404 from '../images/404.jpg';\r\n\r\nclass NotFound extends React.Component {\r\n   render() {\r\n      return <img src={Image404} alt=\"Nothing is here.\" \r\n                  width='900'\r\n                  style={{margin:'10em'}}/>;\r\n   }\r\n}\r\nexport default NotFound;","import React, { useState, useEffect } from 'react';\nimport SignIn from './components/SignIn';\nimport Layout from './layout';\nimport DaoLayout from './dao-layout';\nimport CreateDao from './components/CreateDao';\nimport DaoDashboard from './components/DaoDashboard';\nimport JobsOverview from './components/JobsOverview';\nimport JobDetail from './components/JobDetail';\nimport MembersOverview from './components/MembersOverview';\nimport MemberDetail from './components/MemberDetail';\nimport TasksOverview from './components/TasksOverview';\nimport TaskDetail from './components/TaskDetail';\nimport ApplicationOverview from './components/ApplicationOverview';\nimport NotFound from './components/404.jsx';\nimport 'materialize-css/dist/css/materialize.css'\nimport './App.css';\nimport Big from 'big.js';\nimport { Route, Routes } from 'react-router-dom'\nvar version = require('../package.json').version;\nrequire('materialize-css');\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 14).toFixed();\n\nconst App = ({ contract, currentUser, nearConfig, wallet, provider, lastTransaction, error }) => {\n  const [message, setMessage] = useState('');\n  const [dao, setDao] = useState('');\n  const [daoData, setDaoData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  \n  useEffect(() => {\n      if (error){\n        setMessage(decodeURI(error));\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname + window.location.hash);\n      }\n      else if (lastTransaction && currentUser) {          \n        getState(lastTransaction, currentUser.accountId);\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname + window.location.hash);\n      }\n\n      async function getState(txHash, accountId) {\n        const result = await provider.txStatus(txHash, accountId);\n        //dao creation\n        let message = result.receipts_outcome[0].outcome.logs.pop();\n        if(!message){\n          //cancel job\n          message = result.receipts_outcome[3].outcome.logs.pop();\n        }\n        if(message){\n          setMessage(message);\n        }\n      }\n  }, [lastTransaction, error, currentUser, provider]);\n  \n  useEffect(() => {\n      async function fetchData() {\n        if(!dao){\n          return;\n        }\n        const result = await contract.get_dao(\n        {\n          dao_owner: dao\n        });\n        console.log(result);\n        setDaoData(result);\n        setLoaded(true);\n      }\n      \n      fetchData();\n  }, [contract, currentUser, dao]);\n\n  const onCancelJob = (jobId) => {\n      contract.cancel_job(\n        {\n          job_id: jobId\n        },\n        BOATLOAD_OF_GAS,\n        Big('1').times(10 ** 21).toFixed()\n      ).then((_) => {\n        console.log(\"Successfully canceled.\");\n      })\n  }\n\n  const onStartJob = (jobId, contracted) => {\n      contract.start_job(\n        {\n          job_id: jobId,\n          contracted: contracted\n        },\n        BOATLOAD_OF_GAS,\n        Big('1').times(10 ** 22).toFixed()\n      ).then((_) => {\n        console.log(\"Successfully started.\");\n      })\n  }\n\n  const onJobCreation = (e) => {\n    e.preventDefault();\n\n    const { fieldset, name_prompt, description_prompt, payment_prompt, duration_prompt } = e.target.elements;\n    const payment = Big(payment_prompt.value).times(10 ** 24).toFixed();\n    \n    fieldset.disabled = true;\n\n    contract.create_job_offering(\n      {\n        name: name_prompt.value,\n        description: description_prompt.value,\n        payment: payment,\n        payment_cycle_in_s: duration_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      payment\n    ).then((_) => {\n      console.log(\"Successfully created job.\");\n    })\n  }\n\n  const onApplyForJob = (e) => {\n    e.preventDefault();\n\n    const { fieldset, job_id, application_prompt } = e.target.elements;\n    \n    fieldset.disabled = true;\n    \n    contract.apply_for_job(\n      {\n        dao_owner: dao,\n        job_id: job_id.value,\n        application: application_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      0\n    ).then((_) => {\n      console.log(\"Successfully added application.\");\n    })\n  }\n  \n  const signIn = () => {\n    wallet.requestSignIn(\n      {contractId: nearConfig.contractName, methodNames: [contract.cancel_job.name, \n                                                          contract.start_job.name, \n                                                          contract.create_job_offering.name,\n                                                          contract.apply_for_job.name]}, //contract requesting access\n      'NEAR Challenge #8 - DAO Dashboard', //optional name\n      null, //optional URL to redirect to if the sign in was successful\n      null //optional URL to redirect to if the sign in was NOT successful\n    );\n  };\n\n  const signOut = () => {\n    wallet.signOut();\n  };\n\n  const clearMessage = () => {\n    setMessage('');\n  };\n\n  if(!currentUser){\n    return <SignIn signIn={signIn}/>;\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout currentUser={currentUser} signIn={signIn} signOut={signOut} clearMessage={clearMessage} message={message}/>}>\n        <Route index element={<CreateDao version={version}/>}/>\n        <Route path=\":dao\" element={<DaoLayout setDao={setDao}/>}>\n          <Route index element={<DaoDashboard version={version}/>}/>\n          <Route path=\"jobs\">\n            <Route index element={<JobsOverview daoData={daoData} loaded={loaded} onJobCreation={onJobCreation} currentUser={currentUser}/>}/>\n            <Route path=\":job\" element={<JobDetail daoData={daoData} currentUser={currentUser} onCancelJob={onCancelJob} onStartJob={onStartJob} onApplyForJob={onApplyForJob}/>}/>\n            {currentUser.accountId === dao\n              ? <Route path=\":job/applications\" element={<ApplicationOverview daoData={daoData} loaded={loaded}/>}/>\n              : null\n            }\n          </Route>\n          <Route path=\"tasks\">\n            <Route index element={<TasksOverview/>}/>\n            <Route path=\":task\" element={<TaskDetail/>}/>\n          </Route>\n          <Route path=\"members\">\n            <Route index element={<MembersOverview version={version} nearConfig={nearConfig}/>}/>\n            <Route path=\":member\" element={<MemberDetail/>}/>\n          </Route>\n          <Route path=\"*\" element={<NotFound/>}/>\n        </Route>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport getConfig from './config.js';\nimport * as nearAPI from 'near-api-js';\n\n// Initializing contract\nasync function initContract() {\n  \n  // get network configuration values from config.js\n  // based on the network ID we pass to getConfig()\n  const nearConfig = getConfig(process.env.NEAR_ENV || 'testnet');\n\n  // create a keyStore for signing transactions using the user's key\n  // which is located in the browser local storage after user logs in\n  const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n\n  // Initializing connection to the NEAR testnet\n  const near = await nearAPI.connect({ keyStore, ...nearConfig });\n\n  // Initialize wallet connection\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in user's account data\n  let currentUser;\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      // Gets the accountId as a string\n      accountId: walletConnection.getAccountId(),\n      // Gets the user's token balance\n      balance: (await walletConnection.account().state()).amount,\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(\n    // User's accountId as a string\n    walletConnection.account(),\n    // accountId of the contract we will be loading\n    // NOTE: All contracts on NEAR are deployed to an account and\n    // accounts can only have one contract deployed to them.\n    nearConfig.contractName,\n    {\n      // View methods are read-only – they don't modify the state, but usually return some value\n      viewMethods: ['get_dao'],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: ['cancel_job', 'start_job', 'create_job_offering', 'apply_for_job'],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.getAccountId(),\n    }\n  );\n  \n  const provider = near.connection.provider;\n  \n  return { contract, currentUser, nearConfig, walletConnection, provider };\n}\n\nwindow.nearInitPromise = initContract().then(\n  ({ contract, currentUser, nearConfig, walletConnection, provider }) => {\n    let urlParams = new URLSearchParams(window.location.search);\n    let lastTransaction;\n    if(urlParams.has('transactionHashes')){\n        lastTransaction = urlParams.get('transactionHashes');\n    }\n    let errorMessage;\n    if(urlParams.has('errorMessage')){\n        errorMessage = urlParams.get('errorMessage');\n    }\n    ReactDOM.render(\n\t  <Router>\n        <App\n          contract={contract}\n          currentUser={currentUser}\n          nearConfig={nearConfig}\n          wallet={walletConnection}\n          lastTransaction={lastTransaction}\n          provider={provider}\n          error={errorMessage}\n        />\n\t  </Router>,\n      document.getElementById('root')\n    );\n  }\n);\n\n"],"sourceRoot":""}